
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.57+148 (git sha1 259bd6fb3, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3)

-- Executing script file `synthesis_GLS_TI.ys' --

1. Executing Verilog-2005 frontend: src/wb_interconnect.v
Parsing Verilog input from `src/wb_interconnect.v' to AST representation.
Generating RTLIL representation for module `\wb_interconnect'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: src/picorv32.v
Parsing Verilog input from `src/picorv32.v' to AST representation.
Generating RTLIL representation for module `\picorv32'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: src/soc.v
Parsing Verilog input from `src/soc.v' to AST representation.
Generating RTLIL representation for module `\soc'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: src/sram_stub.v
Parsing Verilog input from `src/sram_stub.v' to AST representation.
Generating RTLIL representation for module `\sram'.
Successfully finished Verilog frontend.

5. Executing SYNTH pass.

5.1. Executing HIERARCHY pass (managing design hierarchy).

5.1.1. Analyzing design hierarchy..
Top module:  \soc
Used module:     \wb_interconnect
Used module:     \picorv32
Parameter \BARREL_SHIFTER = 1
Parameter \COMPRESSED_ISA = 1
Parameter \ENABLE_MUL = 1

5.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \BARREL_SHIFTER = 1
Parameter \COMPRESSED_ISA = 1
Parameter \ENABLE_MUL = 1
Generating RTLIL representation for module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.

5.1.3. Analyzing design hierarchy..
Top module:  \soc
Used module:     \wb_interconnect
Used module:     $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32
Used module:         \picorv32_pcpi_mul

5.1.4. Analyzing design hierarchy..
Top module:  \soc
Used module:     \wb_interconnect
Used module:     $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32
Used module:         \picorv32_pcpi_mul
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_div'.
Removing unused module `\picorv32_pcpi_fast_mul'.
Removing unused module `\picorv32_regs'.
Removing unused module `\picorv32'.
Removed 7 unused modules.

5.2. Executing PROC pass (convert processes to netlists).

5.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
Found and cleaned up 1 empty switch in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:206$1550'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:206$1550'.
Found and cleaned up 17 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
Found and cleaned up 1 empty switch in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1348$1348'.
Found and cleaned up 6 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:546$984'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:546$984'.
Cleaned up 26 empty switches.

5.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 4 switch rules as full_case in process $proc$src/picorv32.v:2273$752 in module picorv32_pcpi_mul.
Marked 38 switch rules as full_case in process $proc$src/picorv32.v:1402$1364 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 1 switch rules as full_case in process $proc$src/picorv32.v:1337$1339 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 2 switch rules as full_case in process $proc$src/picorv32.v:1309$1327 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 2 switch rules as full_case in process $proc$src/picorv32.v:1295$1322 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 8 switch rules as full_case in process $proc$src/picorv32.v:1186$1287 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 3 switch rules as full_case in process $proc$src/picorv32.v:858$1024 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 3 switch rules as full_case in process $proc$src/picorv32.v:809$1022 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 2 switch rules as full_case in process $proc$src/picorv32.v:778$1018 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 48 switch rules as full_case in process $proc$src/picorv32.v:701$1017 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 4 switch rules as full_case in process $proc$src/picorv32.v:565$993 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 1 switch rules as full_case in process $proc$src/picorv32.v:430$955 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Removed 2 dead cases from process $proc$src/picorv32.v:401$952 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 2 switch rules as full_case in process $proc$src/picorv32.v:401$952 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 1 switch rules as full_case in process $proc$src/picorv32.v:390$947 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Marked 1 switch rules as full_case in process $proc$src/picorv32.v:325$873 in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Removed a total of 2 dead cases.

5.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 4 redundant assignments.
Promoted 86 assignments to connections.

5.2.4. Executing PROC_INIT pass (extract init attributes).

5.2.5. Executing PROC_ARST pass (detect async resets in processes).

5.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~200 debug messages>

5.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2307$757'.
     1/3: $0\pcpi_ready[0:0]
     2/3: $0\pcpi_wr[0:0]
     3/3: $0\pcpi_rd[31:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2273$752'.
     1/7: $0\mul_finish[0:0]
     2/7: $0\mul_waiting[0:0]
     3/7: $0\mul_counter[6:0]
     4/7: $0\rdx[63:0]
     5/7: $0\rd[63:0]
     6/7: $0\rs2[63:0]
     7/7: $0\rs1[63:0]
Creating decoders for process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
Creating decoders for process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2221$708'.
     1/4: $0\instr_mulhu[0:0]
     2/4: $0\instr_mulhsu[0:0]
     3/4: $0\instr_mulh[0:0]
     4/4: $0\instr_mul[0:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
     1/82: $20\next_irq_pending[2:2]
     2/82: $19\next_irq_pending[2:2]
     3/82: $18\next_irq_pending[2:2]
     4/82: $17\next_irq_pending[2:2]
     5/82: $16\next_irq_pending[2:2]
     6/82: $15\next_irq_pending[2:2]
     7/82: $14\next_irq_pending[2:2]
     8/82: $2\next_irq_pending[31:0] [31:2]
     9/82: $3\set_mem_do_rdata[0:0]
    10/82: $2\next_irq_pending[31:0] [1]
    11/82: $3\set_mem_do_wdata[0:0]
    12/82: $2\next_irq_pending[31:0] [0]
    13/82: $4\set_mem_do_rinst[0:0]
    14/82: $3\set_mem_do_rinst[0:0]
    15/82: $4\set_mem_do_wdata[0:0]
    16/82: $12\next_irq_pending[1:1]
    17/82: $11\next_irq_pending[1:1]
    18/82: $10\next_irq_pending[1:1]
    19/82: $4\set_mem_do_rdata[0:0]
    20/82: $8\next_irq_pending[1:1]
    21/82: $7\next_irq_pending[1:1]
    22/82: $6\next_irq_pending[1:1]
    23/82: $5\next_irq_pending[1:1]
    24/82: $4\next_irq_pending[1:1]
    25/82: $13\next_irq_pending[1:1]
    26/82: $5\set_mem_do_rinst[0:0]
    27/82: $9\next_irq_pending[1:1]
    28/82: $3\next_irq_pending[31:0]
    29/82: $3\current_pc[31:0]
    30/82: $2\current_pc[31:0]
    31/82: $2\set_mem_do_wdata[0:0]
    32/82: $2\set_mem_do_rdata[0:0]
    33/82: $2\set_mem_do_rinst[0:0]
    34/82: $1\next_irq_pending[31:0]
    35/82: $1\current_pc[31:0]
    36/82: $1\set_mem_do_wdata[0:0]
    37/82: $1\set_mem_do_rdata[0:0]
    38/82: $1\set_mem_do_rinst[0:0]
    39/82: $0\trace_data[35:0]
    40/82: $0\count_cycle[63:0]
    41/82: $0\pcpi_timeout[0:0]
    42/82: $0\trace_valid[0:0]
    43/82: $0\do_waitirq[0:0]
    44/82: $0\decoder_pseudo_trigger[0:0]
    45/82: $0\decoder_trigger[0:0]
    46/82: $0\alu_wait_2[0:0]
    47/82: $0\alu_wait[0:0]
    48/82: $0\reg_out[31:0]
    49/82: $0\reg_sh[4:0]
    50/82: $0\trap[0:0]
    51/82: $0\pcpi_timeout_counter[3:0]
    52/82: $0\latched_rd[4:0]
    53/82: $0\latched_is_lb[0:0]
    54/82: $0\latched_is_lh[0:0]
    55/82: $0\latched_is_lu[0:0]
    56/82: $0\latched_trace[0:0]
    57/82: $0\latched_compr[0:0]
    58/82: $0\latched_branch[0:0]
    59/82: $0\latched_stalu[0:0]
    60/82: $0\latched_store[0:0]
    61/82: $0\irq_state[1:0]
    62/82: $0\cpu_state[7:0]
    63/82: $0\dbg_rs2val_valid[0:0]
    64/82: $0\dbg_rs1val_valid[0:0]
    65/82: $0\dbg_rs2val[31:0]
    66/82: $0\dbg_rs1val[31:0]
    67/82: $0\mem_do_wdata[0:0]
    68/82: $0\mem_do_rdata[0:0]
    69/82: $0\mem_do_rinst[0:0]
    70/82: $0\mem_do_prefetch[0:0]
    71/82: $0\mem_wordsize[1:0]
    72/82: $0\timer[31:0]
    73/82: $0\irq_mask[31:0]
    74/82: $0\irq_active[0:0]
    75/82: $0\irq_delay[0:0]
    76/82: $0\reg_op2[31:0]
    77/82: $0\reg_op1[31:0]
    78/82: $0\reg_next_pc[31:0]
    79/82: $0\reg_pc[31:0]
    80/82: $0\count_instr[63:0]
    81/82: $0\eoi[31:0]
    82/82: $0\pcpi_valid[0:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1348$1348'.
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1337$1339'.
     1/3: $1$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1347
     2/3: $1$memwr$\cpuregs$src/picorv32.v:1344$872_DATA[31:0]$1346
     3/3: $1$memwr$\cpuregs$src/picorv32.v:1344$872_ADDR[4:0]$1345
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1309$1327'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1295$1322'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1293$1321'.
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1249$1299'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1186$1287'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
     1/77: $0\decoded_rs1[4:0] [4]
     2/77: $0\decoded_imm_j[31:0] [10]
     3/77: $0\decoded_imm_j[31:0] [7]
     4/77: $0\decoded_imm_j[31:0] [6]
     5/77: $0\decoded_imm_j[31:0] [3:1]
     6/77: $0\decoded_imm_j[31:0] [5]
     7/77: $0\decoded_imm_j[31:0] [9:8]
     8/77: $0\decoded_imm_j[31:0] [31:20]
     9/77: $0\decoded_imm_j[31:0] [4]
    10/77: $0\decoded_imm_j[31:0] [11]
    11/77: $0\decoded_imm_j[31:0] [0]
    12/77: $0\decoded_rs1[4:0] [3:0]
    13/77: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/77: $0\is_alu_reg_reg[0:0]
    15/77: $0\is_alu_reg_imm[0:0]
    16/77: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/77: $0\is_sll_srl_sra[0:0]
    18/77: $0\is_sb_sh_sw[0:0]
    19/77: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/77: $0\is_slli_srli_srai[0:0]
    21/77: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/77: $0\compressed_instr[0:0]
    23/77: $0\is_compare[0:0]
    24/77: $0\decoded_imm[31:0]
    25/77: $0\decoded_rs2[4:0]
    26/77: $0\decoded_imm_j[31:0] [19:12]
    27/77: $0\decoded_rd[4:0]
    28/77: $0\instr_timer[0:0]
    29/77: $0\instr_waitirq[0:0]
    30/77: $0\instr_maskirq[0:0]
    31/77: $0\instr_retirq[0:0]
    32/77: $0\instr_setq[0:0]
    33/77: $0\instr_getq[0:0]
    34/77: $0\instr_fence[0:0]
    35/77: $0\instr_ecall_ebreak[0:0]
    36/77: $0\instr_rdinstrh[0:0]
    37/77: $0\instr_rdinstr[0:0]
    38/77: $0\instr_rdcycleh[0:0]
    39/77: $0\instr_rdcycle[0:0]
    40/77: $0\instr_and[0:0]
    41/77: $0\instr_or[0:0]
    42/77: $0\instr_sra[0:0]
    43/77: $0\instr_srl[0:0]
    44/77: $0\instr_xor[0:0]
    45/77: $0\instr_sltu[0:0]
    46/77: $0\instr_slt[0:0]
    47/77: $0\instr_sll[0:0]
    48/77: $0\instr_sub[0:0]
    49/77: $0\instr_add[0:0]
    50/77: $0\instr_srai[0:0]
    51/77: $0\instr_srli[0:0]
    52/77: $0\instr_slli[0:0]
    53/77: $0\instr_andi[0:0]
    54/77: $0\instr_ori[0:0]
    55/77: $0\instr_xori[0:0]
    56/77: $0\instr_sltiu[0:0]
    57/77: $0\instr_slti[0:0]
    58/77: $0\instr_addi[0:0]
    59/77: $0\instr_sw[0:0]
    60/77: $0\instr_sh[0:0]
    61/77: $0\instr_sb[0:0]
    62/77: $0\instr_lhu[0:0]
    63/77: $0\instr_lbu[0:0]
    64/77: $0\instr_lw[0:0]
    65/77: $0\instr_lh[0:0]
    66/77: $0\instr_lb[0:0]
    67/77: $0\instr_bgeu[0:0]
    68/77: $0\instr_bltu[0:0]
    69/77: $0\instr_bge[0:0]
    70/77: $0\instr_blt[0:0]
    71/77: $0\instr_bne[0:0]
    72/77: $0\instr_beq[0:0]
    73/77: $0\instr_jalr[0:0]
    74/77: $0\instr_jal[0:0]
    75/77: $0\instr_auipc[0:0]
    76/77: $0\instr_lui[0:0]
    77/77: $0\pcpi_insn[31:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:809$1022'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:701$1017'.
     1/48: $48\new_ascii_instr[63:0]
     2/48: $47\new_ascii_instr[63:0]
     3/48: $46\new_ascii_instr[63:0]
     4/48: $45\new_ascii_instr[63:0]
     5/48: $44\new_ascii_instr[63:0]
     6/48: $43\new_ascii_instr[63:0]
     7/48: $42\new_ascii_instr[63:0]
     8/48: $41\new_ascii_instr[63:0]
     9/48: $40\new_ascii_instr[63:0]
    10/48: $39\new_ascii_instr[63:0]
    11/48: $38\new_ascii_instr[63:0]
    12/48: $37\new_ascii_instr[63:0]
    13/48: $36\new_ascii_instr[63:0]
    14/48: $35\new_ascii_instr[63:0]
    15/48: $34\new_ascii_instr[63:0]
    16/48: $33\new_ascii_instr[63:0]
    17/48: $32\new_ascii_instr[63:0]
    18/48: $31\new_ascii_instr[63:0]
    19/48: $30\new_ascii_instr[63:0]
    20/48: $29\new_ascii_instr[63:0]
    21/48: $28\new_ascii_instr[63:0]
    22/48: $27\new_ascii_instr[63:0]
    23/48: $26\new_ascii_instr[63:0]
    24/48: $25\new_ascii_instr[63:0]
    25/48: $24\new_ascii_instr[63:0]
    26/48: $23\new_ascii_instr[63:0]
    27/48: $22\new_ascii_instr[63:0]
    28/48: $21\new_ascii_instr[63:0]
    29/48: $20\new_ascii_instr[63:0]
    30/48: $19\new_ascii_instr[63:0]
    31/48: $18\new_ascii_instr[63:0]
    32/48: $17\new_ascii_instr[63:0]
    33/48: $16\new_ascii_instr[63:0]
    34/48: $15\new_ascii_instr[63:0]
    35/48: $14\new_ascii_instr[63:0]
    36/48: $13\new_ascii_instr[63:0]
    37/48: $12\new_ascii_instr[63:0]
    38/48: $11\new_ascii_instr[63:0]
    39/48: $10\new_ascii_instr[63:0]
    40/48: $9\new_ascii_instr[63:0]
    41/48: $8\new_ascii_instr[63:0]
    42/48: $7\new_ascii_instr[63:0]
    43/48: $6\new_ascii_instr[63:0]
    44/48: $5\new_ascii_instr[63:0]
    45/48: $4\new_ascii_instr[63:0]
    46/48: $3\new_ascii_instr[63:0]
    47/48: $2\new_ascii_instr[63:0]
    48/48: $1\new_ascii_instr[63:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1239$1539'.
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:430$955'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:401$952'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:390$947'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:325$873'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]

5.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\picorv32_pcpi_mul.\i' from process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs1' from process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rs2' from process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
No latch inferred for signal `\picorv32_pcpi_mul.\this_rs2' from process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rd' from process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdx' from process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
No latch inferred for signal `\picorv32_pcpi_mul.\next_rdt' from process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
No latch inferred for signal `\picorv32_pcpi_mul.\j' from process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cpuregs_rs1' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1348$1348'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cpuregs_rs2' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1348$1348'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\decoded_rs' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1348$1348'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cpuregs_write' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1309$1327'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cpuregs_wrdata' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1309$1327'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\clear_prefetched_high_word' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1295$1322'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_out' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1249$1299'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_out_0' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1249$1299'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_ascii_state' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1186$1287'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_insn_opcode' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:809$1022'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_ascii_instr' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:809$1022'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_insn_imm' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:809$1022'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_insn_rs1' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:809$1022'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_insn_rs2' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:809$1022'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_insn_rd' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:809$1022'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\new_ascii_instr' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:701$1017'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_add_sub' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1239$1539'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_shl' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1239$1539'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_shr' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1239$1539'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_eq' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1239$1539'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_ltu' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1239$1539'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_lts' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1239$1539'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_la_wdata' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:401$952'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_la_wstrb' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:401$952'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_rdata_word' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:401$952'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\pcpi_int_wr' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:325$873'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\pcpi_int_rd' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:325$873'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\pcpi_int_wait' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:325$873'.
No latch inferred for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\pcpi_int_ready' from process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:325$873'.

5.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wr' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2307$757'.
  created $dff cell `$procdff$4480' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_rd' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2307$757'.
  created $dff cell `$procdff$4481' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_ready' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2307$757'.
  created $dff cell `$procdff$4482' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs1' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2273$752'.
  created $dff cell `$procdff$4483' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rs2' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2273$752'.
  created $dff cell `$procdff$4484' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rd' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2273$752'.
  created $dff cell `$procdff$4485' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\rdx' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2273$752'.
  created $dff cell `$procdff$4486' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_counter' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2273$752'.
  created $dff cell `$procdff$4487' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_waiting' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2273$752'.
  created $dff cell `$procdff$4488' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\mul_finish' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2273$752'.
  created $dff cell `$procdff$4489' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2221$708'.
  created $dff cell `$procdff$4490' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mul' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2221$708'.
  created $dff cell `$procdff$4491' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulh' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2221$708'.
  created $dff cell `$procdff$4492' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhsu' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2221$708'.
  created $dff cell `$procdff$4493' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\instr_mulhu' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2221$708'.
  created $dff cell `$procdff$4494' with positive edge clock.
Creating register for signal `\picorv32_pcpi_mul.\pcpi_wait_q' using process `\picorv32_pcpi_mul.$proc$src/picorv32.v:2221$708'.
  created $dff cell `$procdff$4495' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\trap' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4496' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\pcpi_valid' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4497' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\eoi' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4498' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\trace_valid' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4499' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\trace_data' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4500' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\count_cycle' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4501' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\count_instr' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4502' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\reg_pc' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4503' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\reg_next_pc' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4504' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\reg_op1' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4505' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\reg_op2' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4506' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\reg_out' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4507' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\reg_sh' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4508' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\irq_delay' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4509' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\irq_active' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4510' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\irq_mask' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4511' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\irq_pending' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4512' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\timer' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4513' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_wordsize' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4514' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_do_prefetch' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4515' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_do_rinst' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4516' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_do_rdata' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4517' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_do_wdata' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4518' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\decoder_trigger' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4519' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\decoder_trigger_q' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4520' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\decoder_pseudo_trigger' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4521' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\decoder_pseudo_trigger_q' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4522' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_rs1val' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4523' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_rs2val' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4524' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_rs1val_valid' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4525' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_rs2val_valid' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4526' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cpu_state' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4527' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\irq_state' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4528' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\set_mem_do_rinst' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4529' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\set_mem_do_rdata' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4530' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\set_mem_do_wdata' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4531' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\latched_store' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4532' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\latched_stalu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4533' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\latched_branch' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4534' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\latched_compr' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4535' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\latched_trace' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4536' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\latched_is_lu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4537' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\latched_is_lh' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4538' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\latched_is_lb' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4539' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\latched_rd' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4540' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\current_pc' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4541' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\pcpi_timeout_counter' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4542' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\pcpi_timeout' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4543' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\next_irq_pending' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4544' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\do_waitirq' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4545' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_out_q' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4546' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_out_0_q' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4547' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_wait' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4548' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\alu_wait_2' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
  created $dff cell `$procdff$4549' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$memwr$\cpuregs$src/picorv32.v:1344$872_ADDR' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1337$1339'.
  created $dff cell `$procdff$4550' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$memwr$\cpuregs$src/picorv32.v:1344$872_DATA' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1337$1339'.
  created $dff cell `$procdff$4551' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$memwr$\cpuregs$src/picorv32.v:1344$872_EN' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1337$1339'.
  created $dff cell `$procdff$4552' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\clear_prefetched_high_word_q' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1293$1321'.
  created $dff cell `$procdff$4553' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\pcpi_insn' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4554' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_lui' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4555' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_auipc' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4556' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_jal' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4557' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_jalr' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4558' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_beq' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4559' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_bne' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4560' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_blt' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4561' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_bge' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4562' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_bltu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4563' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_bgeu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4564' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_lb' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4565' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_lh' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4566' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_lw' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4567' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_lbu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4568' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_lhu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4569' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_sb' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4570' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_sh' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4571' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_sw' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4572' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_addi' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4573' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_slti' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4574' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_sltiu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4575' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_xori' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4576' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_ori' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4577' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_andi' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4578' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_slli' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4579' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_srli' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4580' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_srai' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4581' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_add' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4582' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_sub' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4583' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_sll' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4584' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_slt' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4585' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_sltu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4586' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_xor' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4587' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_srl' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4588' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_sra' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4589' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_or' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4590' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_and' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4591' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_rdcycle' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4592' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_rdcycleh' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4593' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_rdinstr' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4594' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_rdinstrh' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4595' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_ecall_ebreak' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4596' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_fence' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4597' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_getq' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4598' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_setq' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4599' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_retirq' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4600' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_maskirq' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4601' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_waitirq' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4602' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\instr_timer' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4603' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\decoded_rd' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4604' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\decoded_rs1' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4605' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\decoded_rs2' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4606' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\decoded_imm' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4607' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\decoded_imm_j' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4608' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\compressed_instr' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4609' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_lui_auipc_jal' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4610' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_lb_lh_lw_lbu_lhu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4611' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_slli_srli_srai' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4612' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4613' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_sb_sh_sw' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4614' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_sll_srl_sra' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4615' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4616' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_slti_blt_slt' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4617' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_sltiu_bltu_sltu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4618' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4619' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_lbu_lhu_lw' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4620' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_alu_reg_imm' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4621' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_alu_reg_reg' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4622' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\is_compare' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
  created $dff cell `$procdff$4623' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_insn_addr' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4624' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\q_ascii_instr' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4625' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\q_insn_imm' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4626' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\q_insn_opcode' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4627' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\q_insn_rs1' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4628' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\q_insn_rs2' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4629' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\q_insn_rd' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4630' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_next' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4631' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\dbg_valid_insn' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4632' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cached_ascii_instr' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4633' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cached_insn_imm' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4634' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cached_insn_opcode' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4635' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cached_insn_rs1' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4636' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cached_insn_rs2' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4637' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\cached_insn_rd' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
  created $dff cell `$procdff$4638' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_valid' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
  created $dff cell `$procdff$4639' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_instr' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
  created $dff cell `$procdff$4640' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_addr' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
  created $dff cell `$procdff$4641' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_wdata' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
  created $dff cell `$procdff$4642' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_wstrb' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
  created $dff cell `$procdff$4643' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_state' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
  created $dff cell `$procdff$4644' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_la_secondword' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
  created $dff cell `$procdff$4645' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\prefetched_high_word' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
  created $dff cell `$procdff$4646' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_16bit_buffer' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
  created $dff cell `$procdff$4647' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\next_insn_opcode' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:430$955'.
  created $dff cell `$procdff$4648' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_rdata_q' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:430$955'.
  created $dff cell `$procdff$4649' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\mem_la_firstword_reg' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:390$947'.
  created $dff cell `$procdff$4650' with positive edge clock.
Creating register for signal `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.\last_mem_valid' using process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:390$947'.
  created $dff cell `$procdff$4651' with positive edge clock.

5.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\picorv32_pcpi_mul.$proc$src/picorv32.v:2307$757'.
Removing empty process `picorv32_pcpi_mul.$proc$src/picorv32.v:2307$757'.
Found and cleaned up 5 empty switches in `\picorv32_pcpi_mul.$proc$src/picorv32.v:2273$752'.
Removing empty process `picorv32_pcpi_mul.$proc$src/picorv32.v:2273$752'.
Removing empty process `picorv32_pcpi_mul.$proc$src/picorv32.v:2249$714'.
Found and cleaned up 2 empty switches in `\picorv32_pcpi_mul.$proc$src/picorv32.v:2221$708'.
Removing empty process `picorv32_pcpi_mul.$proc$src/picorv32.v:2221$708'.
Found and cleaned up 58 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1402$1364'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1348$1348'.
Found and cleaned up 1 empty switch in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1337$1339'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1337$1339'.
Found and cleaned up 2 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1309$1327'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1309$1327'.
Found and cleaned up 2 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1295$1322'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1295$1322'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1293$1321'.
Found and cleaned up 2 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1249$1299'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1249$1299'.
Found and cleaned up 8 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1186$1287'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1186$1287'.
Found and cleaned up 22 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:858$1024'.
Found and cleaned up 3 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:809$1022'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:809$1022'.
Found and cleaned up 5 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:778$1018'.
Found and cleaned up 48 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:701$1017'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:701$1017'.
Found and cleaned up 16 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:565$993'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:1239$1539'.
Found and cleaned up 19 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:430$955'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:430$955'.
Found and cleaned up 3 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:401$952'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:401$952'.
Found and cleaned up 2 empty switches in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:390$947'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:390$947'.
Found and cleaned up 1 empty switch in `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:325$873'.
Removing empty process `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$proc$src/picorv32.v:325$873'.
Cleaned up 200 empty switches.

5.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_pcpi_mul.
<suppressed ~14 debug messages>
Optimizing module soc.
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~759 debug messages>
Optimizing module wb_interconnect.

5.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~1 debug messages>
Optimizing module wb_interconnect.

5.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \wb_interconnect..
Removed 330 unused cells and 1849 unused wires.
<suppressed ~379 debug messages>

5.5. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32...
Checking module picorv32_pcpi_mul...
Checking module soc...
Checking module wb_interconnect...
Found and reported 0 problems.

5.6. Executing OPT pass (performing simple optimizations).

5.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
<suppressed ~1131 debug messages>
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 377 cells.

5.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$1635.
    dead port 2/2 on $mux $procmux$1645.
    dead port 2/2 on $mux $procmux$1647.
    dead port 2/2 on $mux $procmux$1653.
    dead port 2/2 on $mux $procmux$1660.
    dead port 2/2 on $mux $procmux$1662.
    dead port 2/2 on $mux $procmux$1668.
    dead port 2/2 on $mux $procmux$1689.
    dead port 2/2 on $mux $procmux$1692.
    dead port 2/2 on $mux $procmux$1704.
    dead port 2/2 on $mux $procmux$1711.
    dead port 2/2 on $mux $procmux$1714.
    dead port 2/2 on $mux $procmux$1738.
    dead port 2/2 on $mux $procmux$1741.
    dead port 2/2 on $mux $procmux$1750.
    dead port 2/2 on $mux $procmux$1753.
    dead port 2/2 on $mux $procmux$1761.
    dead port 2/2 on $mux $procmux$1763.
    dead port 2/2 on $mux $procmux$1766.
    dead port 2/2 on $mux $procmux$1827.
    dead port 2/2 on $mux $procmux$1829.
    dead port 2/2 on $mux $procmux$1832.
    dead port 2/2 on $mux $procmux$1995.
    dead port 2/2 on $mux $procmux$2000.
    dead port 2/2 on $mux $procmux$2003.
    dead port 1/3 on $pmux $procmux$2062.
    dead port 2/2 on $mux $procmux$2094.
    dead port 2/2 on $mux $procmux$2107.
    dead port 2/2 on $mux $procmux$2120.
    dead port 1/8 on $pmux $procmux$2351.
    dead port 2/8 on $pmux $procmux$2351.
    dead port 3/8 on $pmux $procmux$2351.
    dead port 4/8 on $pmux $procmux$2351.
    dead port 5/8 on $pmux $procmux$2351.
    dead port 2/11 on $pmux $procmux$2395.
    dead port 4/11 on $pmux $procmux$2395.
    dead port 5/11 on $pmux $procmux$2395.
    dead port 6/11 on $pmux $procmux$2395.
    dead port 7/11 on $pmux $procmux$2395.
    dead port 8/11 on $pmux $procmux$2395.
    dead port 1/8 on $pmux $procmux$2602.
    dead port 2/8 on $pmux $procmux$2602.
    dead port 3/8 on $pmux $procmux$2602.
    dead port 4/8 on $pmux $procmux$2602.
    dead port 5/8 on $pmux $procmux$2602.
    dead port 1/4 on $pmux $procmux$2670.
    dead port 1/3 on $pmux $procmux$2685.
    dead port 2/12 on $pmux $procmux$2689.
    dead port 4/12 on $pmux $procmux$2689.
    dead port 5/12 on $pmux $procmux$2689.
    dead port 6/12 on $pmux $procmux$2689.
    dead port 7/12 on $pmux $procmux$2689.
    dead port 8/12 on $pmux $procmux$2689.
    dead port 1/4 on $pmux $procmux$2873.
    dead port 1/3 on $pmux $procmux$2885.
    dead port 2/12 on $pmux $procmux$2889.
    dead port 4/12 on $pmux $procmux$2889.
    dead port 5/12 on $pmux $procmux$2889.
    dead port 6/12 on $pmux $procmux$2889.
    dead port 7/12 on $pmux $procmux$2889.
    dead port 8/12 on $pmux $procmux$2889.
    dead port 2/11 on $pmux $procmux$3075.
    dead port 4/11 on $pmux $procmux$3075.
    dead port 5/11 on $pmux $procmux$3075.
    dead port 6/11 on $pmux $procmux$3075.
    dead port 7/11 on $pmux $procmux$3075.
    dead port 8/11 on $pmux $procmux$3075.
    dead port 1/8 on $pmux $procmux$3127.
    dead port 2/8 on $pmux $procmux$3127.
    dead port 3/8 on $pmux $procmux$3127.
    dead port 4/8 on $pmux $procmux$3127.
    dead port 5/8 on $pmux $procmux$3127.
    dead port 1/5 on $pmux $procmux$3272.
    dead port 2/5 on $pmux $procmux$3272.
    dead port 2/2 on $mux $procmux$3277.
    dead port 1/5 on $pmux $procmux$3281.
    dead port 2/5 on $pmux $procmux$3281.
    dead port 2/2 on $mux $procmux$3286.
    dead port 2/2 on $mux $procmux$4439.
    dead port 2/2 on $mux $procmux$4446.
    dead port 2/3 on $pmux $procmux$4473.
    dead port 3/3 on $pmux $procmux$4473.
    dead port 2/2 on $mux $procmux$4478.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $procmux$1565: \mul_waiting -> 1'0
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 83 multiplexer ports.
<suppressed ~946 debug messages>

5.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
    New ctrl vector for $pmux cell $procmux$2084: { $procmux$1712_CMP $auto$opt_reduce.cc:137:opt_pmux$4654 }
    New ctrl vector for $pmux cell $procmux$2097: { $auto$opt_reduce.cc:137:opt_pmux$4656 $procmux$1690_CMP }
    New ctrl vector for $pmux cell $procmux$2110: { $procmux$1739_CMP $auto$opt_reduce.cc:137:opt_pmux$4658 }
    New ctrl vector for $pmux cell $procmux$2331: { $procmux$1701_CMP $procmux$1700_CMP $procmux$1739_CMP $procmux$2087_CMP $procmux$1690_CMP }
    New ctrl vector for $pmux cell $procmux$2395: $auto$opt_reduce.cc:137:opt_pmux$4660
    New ctrl vector for $pmux cell $procmux$2439: { $eq$src/picorv32.v:1313$1328_Y $procmux$1739_CMP }
    New ctrl vector for $pmux cell $procmux$2536: { $eq$src/picorv32.v:1313$1328_Y $procmux$1739_CMP }
    New ctrl vector for $pmux cell $procmux$2579: { $eq$src/picorv32.v:1313$1328_Y $procmux$1701_CMP $procmux$1700_CMP $procmux$1739_CMP $auto$opt_reduce.cc:137:opt_pmux$4662 }
    New ctrl vector for $pmux cell $procmux$2689: { \instr_trap \is_rdcycle_rdcycleh_rdinstr_rdinstrh $logic_and$src/picorv32.v:1696$1449_Y $auto$opt_reduce.cc:137:opt_pmux$4664 }
    New ctrl vector for $pmux cell $procmux$2863: { $eq$src/picorv32.v:1313$1328_Y $procmux$1701_CMP $procmux$1700_CMP $procmux$2087_CMP }
    New ctrl vector for $pmux cell $procmux$2889: { \instr_trap \is_rdcycle_rdcycleh_rdinstr_rdinstrh $logic_and$src/picorv32.v:1696$1449_Y $auto$opt_reduce.cc:137:opt_pmux$4666 }
    New ctrl vector for $pmux cell $procmux$3075: { \is_lui_auipc_jal $auto$opt_reduce.cc:137:opt_pmux$4668 $procmux$2396_CTRL }
    Consolidated identical input bits for $mux cell $procmux$3262:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342
      New ports: A=1'0, B=1'1, Y=$0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0]
      New connections: $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [31:1] = { $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] $0$memwr$\cpuregs$src/picorv32.v:1344$872_EN[31:0]$1342 [0] }
    New ctrl vector for $pmux cell $procmux$3272: $auto$opt_reduce.cc:137:opt_pmux$4670
    New ctrl vector for $pmux cell $procmux$3362: { $procmux$3359_CMP $procmux$3377_CMP $procmux$3355_CMP $auto$opt_reduce.cc:137:opt_pmux$4672 }
    New ctrl vector for $pmux cell $procmux$3380: $auto$opt_reduce.cc:137:opt_pmux$4674
    New ctrl vector for $pmux cell $procmux$3448: { $procmux$3359_CMP $procmux$3377_CMP $procmux$3355_CMP $auto$opt_reduce.cc:137:opt_pmux$4676 }
    New ctrl vector for $pmux cell $procmux$3466: { $procmux$3359_CMP $auto$opt_reduce.cc:137:opt_pmux$4678 }
    New ctrl vector for $pmux cell $procmux$3514: { $auto$opt_reduce.cc:137:opt_pmux$4680 $procmux$3377_CMP $procmux$3355_CMP }
    New ctrl vector for $pmux cell $procmux$3535: $auto$opt_reduce.cc:137:opt_pmux$4682
    New ctrl vector for $pmux cell $procmux$3656: { $procmux$3664_CMP $auto$opt_reduce.cc:137:opt_pmux$4684 $procmux$3377_CMP $procmux$3355_CMP }
    New ctrl vector for $pmux cell $procmux$3668: $auto$opt_reduce.cc:137:opt_pmux$4686
    New ctrl vector for $pmux cell $procmux$3828: $auto$opt_reduce.cc:137:opt_pmux$4688
    New ctrl vector for $pmux cell $procmux$4218: { $procmux$3355_CMP $auto$opt_reduce.cc:137:opt_pmux$4690 }
    New ctrl vector for $pmux cell $procmux$4233: { $procmux$3355_CMP $auto$opt_reduce.cc:137:opt_pmux$4692 }
    New ctrl vector for $pmux cell $procmux$4251: $auto$opt_reduce.cc:137:opt_pmux$4694
    New ctrl vector for $pmux cell $procmux$4264: $auto$opt_reduce.cc:137:opt_pmux$4696
    New ctrl vector for $pmux cell $procmux$4289: { $auto$opt_reduce.cc:137:opt_pmux$4698 $procmux$3377_CMP $procmux$3355_CMP }
    New ctrl vector for $pmux cell $procmux$4324: { $procmux$3359_CMP $procmux$3355_CMP $auto$opt_reduce.cc:137:opt_pmux$4700 }
    New ctrl vector for $pmux cell $procmux$4339: { $procmux$3377_CMP $procmux$3355_CMP $auto$opt_reduce.cc:137:opt_pmux$4702 $procmux$3363_CMP }
    New ctrl vector for $pmux cell $procmux$4366: { $procmux$3359_CMP $auto$opt_reduce.cc:137:opt_pmux$4704 }
    New ctrl vector for $pmux cell $procmux$4379: $auto$opt_reduce.cc:137:opt_pmux$4706
    New ctrl vector for $pmux cell $procmux$4405: { $auto$opt_reduce.cc:137:opt_pmux$4710 $procmux$3377_CMP $procmux$3355_CMP $auto$opt_reduce.cc:137:opt_pmux$4708 }
    New ctrl vector for $pmux cell $procmux$4424: { $procmux$3359_CMP $auto$opt_reduce.cc:137:opt_pmux$4712 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$4667: { $logic_and$src/picorv32.v:1696$1449_Y \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$4659: { $logic_and$src/picorv32.v:1696$1449_Y \is_jalr_addi_slti_sltiu_xori_ori_andi \is_slli_srli_srai \is_lui_auipc_jal \instr_rdinstrh \instr_rdinstr \instr_rdcycleh \instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$4663: { \is_jalr_addi_slti_sltiu_xori_ori_andi \is_slli_srli_srai \is_lui_auipc_jal }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$4665: { \is_jalr_addi_slti_sltiu_xori_ori_andi \is_slli_srli_srai \is_lui_auipc_jal }
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 44 changes.

5.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
<suppressed ~114 debug messages>
Finding identical cells in module `\picorv32_pcpi_mul'.
<suppressed ~9 debug messages>
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 41 cells.

5.6.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $procdff$4499 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 0 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 1 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 2 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 3 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 4 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 5 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 6 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 7 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 8 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 9 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 10 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 11 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 12 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 13 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 14 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 15 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 16 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 17 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 18 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 19 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 20 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 21 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 22 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 23 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 24 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 25 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 26 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 27 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 28 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 29 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 30 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 31 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 32 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 33 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 34 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 1-bit at position 35 on $procdff$4500 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.

5.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 12 unused cells and 466 unused wires.
<suppressed ~17 debug messages>

5.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~2 debug messages>
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.6.9. Rerunning OPT passes. (Maybe there is more to do..)

5.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~862 debug messages>

5.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
    New ctrl vector for $pmux cell $procmux$2201: $auto$opt_reduce.cc:137:opt_pmux$4714
    New ctrl vector for $pmux cell $procmux$2218: { $procmux$1739_CMP $auto$opt_reduce.cc:137:opt_pmux$4716 }
    New ctrl vector for $pmux cell $procmux$2648: { $eq$src/picorv32.v:1313$1328_Y $procmux$1701_CMP $procmux$1700_CMP $procmux$1739_CMP $procmux$2087_CMP $auto$opt_reduce.cc:137:opt_pmux$4718 }
    New ctrl vector for $pmux cell $procmux$3236: $auto$opt_reduce.cc:137:opt_pmux$4720
    New ctrl vector for $pmux cell $procmux$3550: $auto$opt_reduce.cc:137:opt_pmux$4722
    New ctrl vector for $pmux cell $procmux$4262: { $procmux$3379_CMP $auto$opt_reduce.cc:137:opt_pmux$4724 }
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 6 changes.

5.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
<suppressed ~9 debug messages>
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 3 cells.

5.6.13. Executing OPT_DFF pass (perform DFF optimizations).

5.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

5.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.6.16. Rerunning OPT passes. (Maybe there is more to do..)

5.6.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~846 debug messages>

5.6.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 0 changes.

5.6.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.6.20. Executing OPT_DFF pass (perform DFF optimizations).

5.6.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..

5.6.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.6.23. Finished fast OPT passes. (There is nothing left to do.)

5.7. Executing FSM pass (extract and optimize FSM).

5.7.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.cpu_state.
Not marking $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.eoi as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.mem_wordsize.

5.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\cpu_state' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
  found $dff cell for state register: $procdff$4527
  root of input selection tree: $0\cpu_state[7:0]
  found reset state: 8'10000000 (guessed from mux tree)
  found ctrl input: $logic_and$src/picorv32.v:1938$1527_Y
  found ctrl input: $logic_and$src/picorv32.v:1922$1510_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:137:opt_pmux$4714
  found ctrl input: $procmux$2087_CMP
  found ctrl input: $procmux$1739_CMP
  found ctrl input: $procmux$1700_CMP
  found ctrl input: $procmux$1701_CMP
  found ctrl input: $eq$src/picorv32.v:1313$1328_Y
  found ctrl input: $logic_or$src/picorv32.v:1857$1495_Y
  found ctrl input: $logic_and$src/picorv32.v:1872$1499_Y
  found ctrl input: $eq$src/picorv32.v:1831$1477_Y
  found ctrl input: \is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \mem_done
  found ctrl input: \is_sb_sh_sw
  found ctrl input: \instr_trap
  found state code: 8'00001000
  found state code: 8'00000010
  found ctrl input: \pcpi_mul_ready
  found ctrl input: $logic_and$src/picorv32.v:1605$1431_Y
  found state code: 8'10000000
  found ctrl input: $auto$opt_reduce.cc:137:opt_pmux$4664
  found ctrl input: $logic_and$src/picorv32.v:1696$1449_Y
  found ctrl input: \is_rdcycle_rdcycleh_rdinstr_rdinstrh
  found state code: 8'00000001
  found ctrl input: \decoder_trigger
  found ctrl input: \instr_jal
  found state code: 8'00100000
  found ctrl input: $logic_and$src/picorv32.v:1930$1520_Y
  found ctrl input: $logic_and$src/picorv32.v:1923$1513_Y
  found ctrl output: $procmux$2092_CMP
  found ctrl output: $procmux$2087_CMP
  found ctrl output: $procmux$1739_CMP
  found ctrl output: $procmux$1712_CMP
  found ctrl output: $procmux$1701_CMP
  found ctrl output: $procmux$1700_CMP
  found ctrl output: $procmux$1690_CMP
  found ctrl output: $eq$src/picorv32.v:1313$1328_Y
  ctrl inputs: { $logic_and$src/picorv32.v:1938$1527_Y $logic_and$src/picorv32.v:1930$1520_Y $logic_and$src/picorv32.v:1923$1513_Y $logic_and$src/picorv32.v:1922$1510_Y $logic_and$src/picorv32.v:1872$1499_Y $logic_or$src/picorv32.v:1857$1495_Y $eq$src/picorv32.v:1831$1477_Y $logic_and$src/picorv32.v:1696$1449_Y $logic_and$src/picorv32.v:1605$1431_Y $auto$opt_reduce.cc:137:opt_pmux$4714 $auto$opt_reduce.cc:137:opt_pmux$4664 \is_rdcycle_rdcycleh_rdinstr_rdinstrh \is_beq_bne_blt_bge_bltu_bgeu \is_sb_sh_sw \decoder_trigger \instr_trap \instr_jal \mem_done \pcpi_mul_ready \resetn }
  ctrl outputs: { $eq$src/picorv32.v:1313$1328_Y $procmux$1690_CMP $procmux$1700_CMP $procmux$1701_CMP $procmux$1712_CMP $0\cpu_state[7:0] $procmux$1739_CMP $procmux$2087_CMP $procmux$2092_CMP }
  transition: 8'10000000 20'0--0---------------0 -> 8'01000000 16'0000001000000001
  transition: 8'10000000 20'0--0---------------1 -> 8'10000000 16'0000010000000001
  transition: 8'10000000 20'0001---------------0 -> 8'01000000 16'0000001000000001
  transition: 8'10000000 20'0001---------------1 -> 8'10000000 16'0000010000000001
  transition: 8'10000000 20'0011---------------- -> 8'10000000 16'0000010000000001
  transition: 8'10000000 20'01-1---------------- -> 8'10000000 16'0000010000000001
  transition: 8'10000000 20'1------------------- -> 8'10000000 16'0000010000000001
  transition: 8'01000000 20'0--0---------------0 -> 8'01000000 16'1000001000000000
  transition: 8'01000000 20'0--0----------0----1 -> 8'01000000 16'1000001000000000
  transition: 8'01000000 20'0--0----------1-0--1 -> 8'00100000 16'1000000100000000
  transition: 8'01000000 20'0--0----------1-1--1 -> 8'01000000 16'1000001000000000
  transition: 8'01000000 20'0001---------------0 -> 8'01000000 16'1000001000000000
  transition: 8'01000000 20'0001----------0----1 -> 8'01000000 16'1000001000000000
  transition: 8'01000000 20'0001----------1-0--1 -> 8'00100000 16'1000000100000000
  transition: 8'01000000 20'0001----------1-1--1 -> 8'01000000 16'1000001000000000
  transition: 8'01000000 20'0011---------------- -> 8'10000000 16'1000010000000000
  transition: 8'01000000 20'01-1---------------- -> 8'10000000 16'1000010000000000
  transition: 8'01000000 20'1------------------- -> 8'10000000 16'1000010000000000
  transition: 8'00100000 20'0--0---------------0 -> 8'01000000 16'0001001000000000
  transition: 8'00100000 20'0--0---0--00-0-0---1 -> 8'00001000 16'0001000001000000
  transition: 8'00100000 20'0--0---0--00-1-----1 -> 8'00000010 16'0001000000010000
  transition: 8'00100000 20'0--0----0------1--01 -> 8'00100000 16'0001000100000000
  transition: 8'00100000 20'0--0----1------1--01 -> 8'10000000 16'0001010000000000
  transition: 8'00100000 20'0--0-----------1--11 -> 8'01000000 16'0001001000000000
  transition: 8'00100000 20'0--0-------1-------1 -> 8'01000000 16'0001001000000000
  transition: 8'00100000 20'0--0---1-----------1 -> 8'00000001 16'0001000000001000
  transition: 8'00100000 20'0--0------1--------1 -> 8'00001000 16'0001000001000000
  transition: 8'00100000 20'0001---------------0 -> 8'01000000 16'0001001000000000
  transition: 8'00100000 20'0001---0--00-0-0---1 -> 8'00001000 16'0001000001000000
  transition: 8'00100000 20'0001---0--00-1-----1 -> 8'00000010 16'0001000000010000
  transition: 8'00100000 20'0001----0------1--01 -> 8'00100000 16'0001000100000000
  transition: 8'00100000 20'0001----1------1--01 -> 8'10000000 16'0001010000000000
  transition: 8'00100000 20'0001-----------1--11 -> 8'01000000 16'0001001000000000
  transition: 8'00100000 20'0001-------1-------1 -> 8'01000000 16'0001001000000000
  transition: 8'00100000 20'0001---1-----------1 -> 8'00000001 16'0001000000001000
  transition: 8'00100000 20'0001------1--------1 -> 8'00001000 16'0001000001000000
  transition: 8'00100000 20'0011---------------- -> 8'10000000 16'0001010000000000
  transition: 8'00100000 20'01-1---------------- -> 8'10000000 16'0001010000000000
  transition: 8'00100000 20'1------------------- -> 8'10000000 16'0001010000000000
  transition: 8'00001000 20'0--0---------------0 -> 8'01000000 16'0000001000000100
  transition: 8'00001000 20'0--0--------0------1 -> 8'01000000 16'0000001000000100
  transition: 8'00001000 20'0--0--------1----0-1 -> 8'00001000 16'0000000001000100
  transition: 8'00001000 20'0--0--------1----1-1 -> 8'01000000 16'0000001000000100
  transition: 8'00001000 20'0001---------------0 -> 8'01000000 16'0000001000000100
  transition: 8'00001000 20'0001--------0------1 -> 8'01000000 16'0000001000000100
  transition: 8'00001000 20'0001--------1----0-1 -> 8'00001000 16'0000000001000100
  transition: 8'00001000 20'0001--------1----1-1 -> 8'01000000 16'0000001000000100
  transition: 8'00001000 20'0011---------------- -> 8'10000000 16'0000010000000100
  transition: 8'00001000 20'01-1---------------- -> 8'10000000 16'0000010000000100
  transition: 8'00001000 20'1------------------- -> 8'10000000 16'0000010000000100
  transition: 8'00000010 20'0--0---------------0 -> 8'01000000 16'0000101000000000
  transition: 8'00000010 20'0--0-0-------------1 -> 8'00000010 16'0000100000010000
  transition: 8'00000010 20'0--001-------------1 -> 8'00000010 16'0000100000010000
  transition: 8'00000010 20'0--011-------------1 -> 8'01000000 16'0000101000000000
  transition: 8'00000010 20'0001---------------0 -> 8'01000000 16'0000101000000000
  transition: 8'00000010 20'0001-0-------------1 -> 8'00000010 16'0000100000010000
  transition: 8'00000010 20'000101-------------1 -> 8'00000010 16'0000100000010000
  transition: 8'00000010 20'000111-------------1 -> 8'01000000 16'0000101000000000
  transition: 8'00000010 20'0011---------------- -> 8'10000000 16'0000110000000000
  transition: 8'00000010 20'01-1---------------- -> 8'10000000 16'0000110000000000
  transition: 8'00000010 20'1------------------- -> 8'10000000 16'0000110000000000
  transition: 8'00000001 20'0--0---------------0 -> 8'01000000 16'0100001000000000
  transition: 8'00000001 20'0--0-0-------------1 -> 8'00000001 16'0100000000001000
  transition: 8'00000001 20'0--001-------------1 -> 8'00000001 16'0100000000001000
  transition: 8'00000001 20'0--011-------------1 -> 8'01000000 16'0100001000000000
  transition: 8'00000001 20'0001---------------0 -> 8'01000000 16'0100001000000000
  transition: 8'00000001 20'0001-0-------------1 -> 8'00000001 16'0100000000001000
  transition: 8'00000001 20'000101-------------1 -> 8'00000001 16'0100000000001000
  transition: 8'00000001 20'000111-------------1 -> 8'01000000 16'0100001000000000
  transition: 8'00000001 20'0011---------------- -> 8'10000000 16'0100010000000000
  transition: 8'00000001 20'01-1---------------- -> 8'10000000 16'0100010000000000
  transition: 8'00000001 20'1------------------- -> 8'10000000 16'0100010000000000
Extracting FSM `\mem_wordsize' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
  found $dff cell for state register: $procdff$4514
  root of input selection tree: $0\mem_wordsize[1:0]
  found ctrl input: \resetn
  found ctrl input: $procmux$1690_CMP
  found ctrl input: $procmux$1712_CMP
  found ctrl input: $eq$src/picorv32.v:1313$1328_Y
  found ctrl input: $logic_or$src/picorv32.v:1857$1495_Y
  found ctrl input: \mem_do_rdata
  found ctrl input: \instr_lw
  found ctrl input: $logic_or$src/picorv32.v:1887$1504_Y
  found ctrl input: $logic_or$src/picorv32.v:1886$1503_Y
  found state code: 2'00
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \mem_do_wdata
  found ctrl input: \instr_sw
  found ctrl input: \instr_sh
  found ctrl input: \instr_sb
  found ctrl output: $eq$src/picorv32.v:1923$1511_Y
  found ctrl output: $eq$src/picorv32.v:1930$1518_Y
  found ctrl output: $procmux$4440_CMP
  ctrl inputs: { $logic_or$src/picorv32.v:1887$1504_Y $logic_or$src/picorv32.v:1886$1503_Y $logic_or$src/picorv32.v:1857$1495_Y $eq$src/picorv32.v:1313$1328_Y $procmux$1690_CMP $procmux$1712_CMP \instr_sw \instr_sh \instr_sb \instr_lw \mem_do_wdata \mem_do_rdata \resetn }
  ctrl outputs: { $procmux$4440_CMP $eq$src/picorv32.v:1930$1518_Y $eq$src/picorv32.v:1923$1511_Y $0\mem_wordsize[1:0] }
  transition:       2'00 13'------------0 ->       2'00 5'00100
  transition:       2'00 13'---000------1 ->       2'00 5'00100
  transition:       2'00 13'---1--------1 ->       2'00 5'00100
  transition:       2'00 13'--0--1------1 ->       2'00 5'00100
  transition:       2'00 13'--1--1000-0-1 ->       2'00 5'00100
  transition:       2'00 13'--1--1--1-0-1 ->       2'10 5'00110
  transition:       2'00 13'--1--1-1--0-1 ->       2'01 5'00101
  transition:       2'00 13'--1--11---0-1 ->       2'00 5'00100
  transition:       2'00 13'--1--1----1-1 ->       2'00 5'00100
  transition:       2'00 13'--0-1-------1 ->       2'00 5'00100
  transition:       2'00 13'001-1----0-01 ->       2'00 5'00100
  transition:       2'00 13'-11-1------01 ->       2'10 5'00110
  transition:       2'00 13'1-1-1------01 ->       2'01 5'00101
  transition:       2'00 13'--1-1----1-01 ->       2'00 5'00100
  transition:       2'00 13'--1-1------11 ->       2'00 5'00100
  transition:       2'10 13'------------0 ->       2'10 5'10010
  transition:       2'10 13'---000------1 ->       2'10 5'10010
  transition:       2'10 13'---1--------1 ->       2'00 5'10000
  transition:       2'10 13'--0--1------1 ->       2'10 5'10010
  transition:       2'10 13'--1--1000-0-1 ->       2'10 5'10010
  transition:       2'10 13'--1--1--1-0-1 ->       2'10 5'10010
  transition:       2'10 13'--1--1-1--0-1 ->       2'01 5'10001
  transition:       2'10 13'--1--11---0-1 ->       2'00 5'10000
  transition:       2'10 13'--1--1----1-1 ->       2'10 5'10010
  transition:       2'10 13'--0-1-------1 ->       2'10 5'10010
  transition:       2'10 13'001-1----0-01 ->       2'10 5'10010
  transition:       2'10 13'-11-1------01 ->       2'10 5'10010
  transition:       2'10 13'1-1-1------01 ->       2'01 5'10001
  transition:       2'10 13'--1-1----1-01 ->       2'00 5'10000
  transition:       2'10 13'--1-1------11 ->       2'10 5'10010
  transition:       2'01 13'------------0 ->       2'01 5'01001
  transition:       2'01 13'---000------1 ->       2'01 5'01001
  transition:       2'01 13'---1--------1 ->       2'00 5'01000
  transition:       2'01 13'--0--1------1 ->       2'01 5'01001
  transition:       2'01 13'--1--1000-0-1 ->       2'01 5'01001
  transition:       2'01 13'--1--1--1-0-1 ->       2'10 5'01010
  transition:       2'01 13'--1--1-1--0-1 ->       2'01 5'01001
  transition:       2'01 13'--1--11---0-1 ->       2'00 5'01000
  transition:       2'01 13'--1--1----1-1 ->       2'01 5'01001
  transition:       2'01 13'--0-1-------1 ->       2'01 5'01001
  transition:       2'01 13'001-1----0-01 ->       2'01 5'01001
  transition:       2'01 13'-11-1------01 ->       2'10 5'01010
  transition:       2'01 13'1-1-1------01 ->       2'01 5'01001
  transition:       2'01 13'--1-1----1-01 ->       2'00 5'01000
  transition:       2'01 13'--1-1------11 ->       2'01 5'01001

5.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mem_wordsize$4735' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Optimizing FSM `$fsm$\cpu_state$4725' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
  Removing unused input signal $eq$src/picorv32.v:1831$1477_Y.
  Removing unused input signal $auto$opt_reduce.cc:137:opt_pmux$4714.

5.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 39 unused cells and 39 unused wires.
<suppressed ~40 debug messages>

5.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cpu_state$4725' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
  Removing unused output signal $0\cpu_state[7:0] [0].
  Removing unused output signal $0\cpu_state[7:0] [1].
  Removing unused output signal $0\cpu_state[7:0] [2].
  Removing unused output signal $0\cpu_state[7:0] [3].
  Removing unused output signal $0\cpu_state[7:0] [4].
  Removing unused output signal $0\cpu_state[7:0] [5].
  Removing unused output signal $0\cpu_state[7:0] [6].
  Removing unused output signal $0\cpu_state[7:0] [7].
Optimizing FSM `$fsm$\mem_wordsize$4735' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
  Removing unused output signal $0\mem_wordsize[1:0] [0].
  Removing unused output signal $0\mem_wordsize[1:0] [1].

5.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\cpu_state$4725' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> -----1
  01000000 -> ----1-
  00100000 -> ---1--
  00001000 -> --1---
  00000010 -> -1----
  00000001 -> 1-----
Recoding FSM `$fsm$\mem_wordsize$4735' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

5.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\cpu_state$4725' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32':
-------------------------------------

  Information on FSM $fsm$\cpu_state$4725 (\cpu_state):

  Number of input signals:   18
  Number of output signals:   8
  Number of state bits:       6

  Input signals:
    0: \resetn
    1: \pcpi_mul_ready
    2: \mem_done
    3: \instr_jal
    4: \instr_trap
    5: \decoder_trigger
    6: \is_sb_sh_sw
    7: \is_beq_bne_blt_bge_bltu_bgeu
    8: \is_rdcycle_rdcycleh_rdinstr_rdinstrh
    9: $auto$opt_reduce.cc:137:opt_pmux$4664
   10: $logic_and$src/picorv32.v:1605$1431_Y
   11: $logic_and$src/picorv32.v:1696$1449_Y
   12: $logic_or$src/picorv32.v:1857$1495_Y
   13: $logic_and$src/picorv32.v:1872$1499_Y
   14: $logic_and$src/picorv32.v:1922$1510_Y
   15: $logic_and$src/picorv32.v:1923$1513_Y
   16: $logic_and$src/picorv32.v:1930$1520_Y
   17: $logic_and$src/picorv32.v:1938$1527_Y

  Output signals:
    0: $procmux$2092_CMP
    1: $procmux$2087_CMP
    2: $procmux$1739_CMP
    3: $procmux$1712_CMP
    4: $procmux$1701_CMP
    5: $procmux$1700_CMP
    6: $procmux$1690_CMP
    7: $eq$src/picorv32.v:1313$1328_Y

  State encoding:
    0:   6'-----1  <RESET STATE>
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 18'0--0-------------1   ->     0 8'00000001
      1:     0 18'0001-------------1   ->     0 8'00000001
      2:     0 18'0011--------------   ->     0 8'00000001
      3:     0 18'01-1--------------   ->     0 8'00000001
      4:     0 18'1-----------------   ->     0 8'00000001
      5:     0 18'0--0-------------0   ->     1 8'00000001
      6:     0 18'0001-------------0   ->     1 8'00000001
      7:     1 18'0011--------------   ->     0 8'10000000
      8:     1 18'01-1--------------   ->     0 8'10000000
      9:     1 18'1-----------------   ->     0 8'10000000
     10:     1 18'0--0-------------0   ->     1 8'10000000
     11:     1 18'0001-------------0   ->     1 8'10000000
     12:     1 18'0--0--------1-1--1   ->     1 8'10000000
     13:     1 18'0001--------1-1--1   ->     1 8'10000000
     14:     1 18'0--0--------0----1   ->     1 8'10000000
     15:     1 18'0001--------0----1   ->     1 8'10000000
     16:     1 18'0--0--------1-0--1   ->     2 8'10000000
     17:     1 18'0001--------1-0--1   ->     2 8'10000000
     18:     2 18'0--0---1-----1--01   ->     0 8'00010000
     19:     2 18'0001---1-----1--01   ->     0 8'00010000
     20:     2 18'0011--------------   ->     0 8'00010000
     21:     2 18'01-1--------------   ->     0 8'00010000
     22:     2 18'1-----------------   ->     0 8'00010000
     23:     2 18'0--0-------------0   ->     1 8'00010000
     24:     2 18'0001-------------0   ->     1 8'00010000
     25:     2 18'0--0---------1--11   ->     1 8'00010000
     26:     2 18'0001---------1--11   ->     1 8'00010000
     27:     2 18'0--0-----1-------1   ->     1 8'00010000
     28:     2 18'0001-----1-------1   ->     1 8'00010000
     29:     2 18'0--0---0-----1--01   ->     2 8'00010000
     30:     2 18'0001---0-----1--01   ->     2 8'00010000
     31:     2 18'0--0--0-00-0-0---1   ->     3 8'00010000
     32:     2 18'0001--0-00-0-0---1   ->     3 8'00010000
     33:     2 18'0--0----1--------1   ->     3 8'00010000
     34:     2 18'0001----1--------1   ->     3 8'00010000
     35:     2 18'0--0--0-00-1-----1   ->     4 8'00010000
     36:     2 18'0001--0-00-1-----1   ->     4 8'00010000
     37:     2 18'0--0--1----------1   ->     5 8'00010000
     38:     2 18'0001--1----------1   ->     5 8'00010000
     39:     3 18'0011--------------   ->     0 8'00000100
     40:     3 18'01-1--------------   ->     0 8'00000100
     41:     3 18'1-----------------   ->     0 8'00000100
     42:     3 18'0--0-------------0   ->     1 8'00000100
     43:     3 18'0001-------------0   ->     1 8'00000100
     44:     3 18'0--0------1----1-1   ->     1 8'00000100
     45:     3 18'0001------1----1-1   ->     1 8'00000100
     46:     3 18'0--0------0------1   ->     1 8'00000100
     47:     3 18'0001------0------1   ->     1 8'00000100
     48:     3 18'0--0------1----0-1   ->     3 8'00000100
     49:     3 18'0001------1----0-1   ->     3 8'00000100
     50:     4 18'0011--------------   ->     0 8'00001000
     51:     4 18'01-1--------------   ->     0 8'00001000
     52:     4 18'1-----------------   ->     0 8'00001000
     53:     4 18'0--0-------------0   ->     1 8'00001000
     54:     4 18'0001-------------0   ->     1 8'00001000
     55:     4 18'0--011-----------1   ->     1 8'00001000
     56:     4 18'000111-----------1   ->     1 8'00001000
     57:     4 18'0--0-0-----------1   ->     4 8'00001000
     58:     4 18'0001-0-----------1   ->     4 8'00001000
     59:     4 18'0--001-----------1   ->     4 8'00001000
     60:     4 18'000101-----------1   ->     4 8'00001000
     61:     5 18'0011--------------   ->     0 8'01000000
     62:     5 18'01-1--------------   ->     0 8'01000000
     63:     5 18'1-----------------   ->     0 8'01000000
     64:     5 18'0--0-------------0   ->     1 8'01000000
     65:     5 18'0001-------------0   ->     1 8'01000000
     66:     5 18'0--011-----------1   ->     1 8'01000000
     67:     5 18'000111-----------1   ->     1 8'01000000
     68:     5 18'0--0-0-----------1   ->     5 8'01000000
     69:     5 18'0001-0-----------1   ->     5 8'01000000
     70:     5 18'0--001-----------1   ->     5 8'01000000
     71:     5 18'000101-----------1   ->     5 8'01000000

-------------------------------------

FSM `$fsm$\mem_wordsize$4735' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32':
-------------------------------------

  Information on FSM $fsm$\mem_wordsize$4735 (\mem_wordsize):

  Number of input signals:   13
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \resetn
    1: \mem_do_rdata
    2: \mem_do_wdata
    3: \instr_lw
    4: \instr_sb
    5: \instr_sh
    6: \instr_sw
    7: $procmux$1712_CMP
    8: $procmux$1690_CMP
    9: $eq$src/picorv32.v:1313$1328_Y
   10: $logic_or$src/picorv32.v:1857$1495_Y
   11: $logic_or$src/picorv32.v:1886$1503_Y
   12: $logic_or$src/picorv32.v:1887$1504_Y

  Output signals:
    0: $eq$src/picorv32.v:1923$1511_Y
    1: $eq$src/picorv32.v:1930$1518_Y
    2: $procmux$4440_CMP

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 13'------------0   ->     0 3'001
      1:     0 13'001-1----0-01   ->     0 3'001
      2:     0 13'--1-1----1-01   ->     0 3'001
      3:     0 13'--1-1------11   ->     0 3'001
      4:     0 13'--1--1000-0-1   ->     0 3'001
      5:     0 13'--1--11---0-1   ->     0 3'001
      6:     0 13'--1--1----1-1   ->     0 3'001
      7:     0 13'---000------1   ->     0 3'001
      8:     0 13'--0--1------1   ->     0 3'001
      9:     0 13'--0-1-------1   ->     0 3'001
     10:     0 13'---1--------1   ->     0 3'001
     11:     0 13'-11-1------01   ->     1 3'001
     12:     0 13'--1--1--1-0-1   ->     1 3'001
     13:     0 13'1-1-1------01   ->     2 3'001
     14:     0 13'--1--1-1--0-1   ->     2 3'001
     15:     1 13'--1-1----1-01   ->     0 3'100
     16:     1 13'--1--11---0-1   ->     0 3'100
     17:     1 13'---1--------1   ->     0 3'100
     18:     1 13'------------0   ->     1 3'100
     19:     1 13'001-1----0-01   ->     1 3'100
     20:     1 13'-11-1------01   ->     1 3'100
     21:     1 13'--1-1------11   ->     1 3'100
     22:     1 13'--1--1000-0-1   ->     1 3'100
     23:     1 13'--1--1--1-0-1   ->     1 3'100
     24:     1 13'--1--1----1-1   ->     1 3'100
     25:     1 13'---000------1   ->     1 3'100
     26:     1 13'--0--1------1   ->     1 3'100
     27:     1 13'--0-1-------1   ->     1 3'100
     28:     1 13'1-1-1------01   ->     2 3'100
     29:     1 13'--1--1-1--0-1   ->     2 3'100
     30:     2 13'--1-1----1-01   ->     0 3'010
     31:     2 13'--1--11---0-1   ->     0 3'010
     32:     2 13'---1--------1   ->     0 3'010
     33:     2 13'-11-1------01   ->     1 3'010
     34:     2 13'--1--1--1-0-1   ->     1 3'010
     35:     2 13'------------0   ->     2 3'010
     36:     2 13'001-1----0-01   ->     2 3'010
     37:     2 13'1-1-1------01   ->     2 3'010
     38:     2 13'--1-1------11   ->     2 3'010
     39:     2 13'--1--1000-0-1   ->     2 3'010
     40:     2 13'--1--1-1--0-1   ->     2 3'010
     41:     2 13'--1--1----1-1   ->     2 3'010
     42:     2 13'---000------1   ->     2 3'010
     43:     2 13'--0--1------1   ->     2 3'010
     44:     2 13'--0-1-------1   ->     2 3'010

-------------------------------------

5.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\cpu_state$4725' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Mapping FSM `$fsm$\mem_wordsize$4735' from module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.

5.8. Executing OPT pass (performing simple optimizations).

5.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~7 debug messages>
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
<suppressed ~66 debug messages>
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 22 cells.

5.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/6 on $pmux $procmux$2331.
    dead port 4/6 on $pmux $procmux$2331.
    dead port 1/2 on $mux $procmux$2334.
    dead port 2/2 on $mux $procmux$2334.
    dead port 1/2 on $mux $procmux$2344.
    dead port 2/2 on $mux $procmux$2344.
    dead port 1/2 on $mux $procmux$2386.
    dead port 2/2 on $mux $procmux$2386.
    dead port 1/2 on $mux $procmux$2389.
    dead port 2/2 on $mux $procmux$2389.
    dead port 1/4 on $pmux $procmux$2391.
    dead port 2/4 on $pmux $procmux$2391.
    dead port 3/6 on $pmux $procmux$2579.
    dead port 1/2 on $mux $procmux$2595.
    dead port 2/2 on $mux $procmux$2595.
    dead port 1/2 on $mux $procmux$2861.
    dead port 2/2 on $mux $procmux$2861.
    dead port 1/5 on $pmux $procmux$2863.
    dead port 2/5 on $pmux $procmux$2863.
    dead port 1/3 on $pmux $procmux$2873.
    dead port 2/3 on $pmux $procmux$2873.
    dead port 3/3 on $pmux $procmux$2873.
    dead port 1/3 on $pmux $procmux$3072.
    dead port 3/5 on $pmux $procmux$3097.
    dead port 1/4 on $pmux $procmux$3107.
    dead port 2/4 on $pmux $procmux$3107.
    dead port 3/4 on $pmux $procmux$3107.
    dead port 4/4 on $pmux $procmux$3107.
    dead port 1/4 on $pmux $procmux$3113.
    dead port 2/4 on $pmux $procmux$3113.
    dead port 3/4 on $pmux $procmux$3113.
    dead port 4/4 on $pmux $procmux$3113.
    dead port 1/2 on $mux $procmux$3117.
    dead port 2/2 on $mux $procmux$3117.
    dead port 1/2 on $mux $procmux$3120.
    dead port 2/2 on $mux $procmux$3120.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 36 multiplexer ports.
<suppressed ~764 debug messages>

5.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$4657: { \cpu_state [5:4] \cpu_state [2:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$4655: \cpu_state [4:0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$4653: { \cpu_state [5] \cpu_state [3:0] }
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 3 changes.

5.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$4651 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:397$951_Y, Q = \last_mem_valid, rval = 1'0).
Adding SRST signal on $procdff$4650 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4466_Y, Q = \mem_la_firstword_reg, rval = 1'0).
Adding EN signal on $procdff$4649 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \mem_rdata_latched [6:0], Q = \mem_rdata_q [6:0]).
Adding EN signal on $procdff$4647 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4098_Y, Q = \mem_16bit_buffer).
Adding SRST signal on $procdff$4646 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4119_Y, Q = \prefetched_high_word, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5056 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4110_Y, Q = \prefetched_high_word).
Adding SRST signal on $procdff$4645 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4133_Y, Q = \mem_la_secondword, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5066 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4129_Y, Q = \mem_la_secondword).
Adding EN signal on $procdff$4644 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $0\mem_state[1:0], Q = \mem_state).
Adding EN signal on $procdff$4643 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4168_Y, Q = \mem_wstrb).
Adding EN signal on $procdff$4642 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \mem_la_wdata, Q = \mem_wdata).
Adding EN signal on $procdff$4641 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \mem_la_addr, Q = \mem_addr).
Adding EN signal on $procdff$4640 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4188_Y, Q = \mem_instr).
Adding SRST signal on $auto$ff.cc:266:slice$5098 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4186_Y, Q = \mem_instr, rval = 1'0).
Adding EN signal on $procdff$4639 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $0\mem_valid[0:0], Q = \mem_valid).
Adding SRST signal on $procdff$4623 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $reduce_or$src/picorv32.v:864$1030_Y, Q = \is_compare, rval = 1'0).
Adding EN signal on $procdff$4622 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3494_Y, Q = \is_alu_reg_reg).
Adding EN signal on $procdff$4621 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3530_Y, Q = \is_alu_reg_imm).
Adding SRST signal on $procdff$4619 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3542_Y, Q = \is_beq_bne_blt_bge_bltu_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5126 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3540_Y, Q = \is_beq_bne_blt_bge_bltu_bgeu).
Adding SRST signal on $procdff$4616 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $reduce_or$src/picorv32.v:860$1026_Y, Q = \is_lui_auipc_jal_jalr_addi_add_sub, rval = 1'0).
Adding EN signal on $procdff$4614 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3555_Y, Q = \is_sb_sh_sw).
Adding EN signal on $procdff$4613 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_or$src/picorv32.v:1101$1271_Y, Q = \is_jalr_addi_slti_sltiu_xori_ori_andi).
Adding EN signal on $procdff$4612 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1095$1262_Y, Q = \is_slli_srli_srai).
Adding EN signal on $procdff$4611 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3575_Y, Q = \is_lb_lh_lw_lbu_lhu).
Adding EN signal on $procdff$4609 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3579_Y, Q = \compressed_instr).
Adding EN signal on $procdff$4608 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = { $procmux$3412_Y $procmux$3625_Y $procmux$3420_Y $procmux$3388_Y $procmux$3408_Y $procmux$3392_Y $procmux$3396_Y $procmux$3404_Y $procmux$3416_Y $procmux$3400_Y 1'0 }, Q = \decoded_imm_j).
Adding EN signal on $procdff$4607 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588_Y, Q = \decoded_imm).
Adding EN signal on $procdff$4606 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3621_Y, Q = \decoded_rs2).
Adding EN signal on $procdff$4605 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = { $procmux$3384_Y $procmux$3471_Y }, Q = \decoded_rs1).
Adding EN signal on $procdff$4604 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3672_Y, Q = \decoded_rd).
Adding EN signal on $procdff$4603 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 1'0, Q = \instr_timer).
Adding EN signal on $procdff$4602 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 1'0, Q = \instr_waitirq).
Adding EN signal on $procdff$4601 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 1'0, Q = \instr_maskirq).
Adding EN signal on $procdff$4600 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 1'0, Q = \instr_retirq).
Adding EN signal on $procdff$4599 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 1'0, Q = \instr_setq).
Adding EN signal on $procdff$4598 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 1'0, Q = \instr_getq).
Adding SRST signal on $procdff$4597 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3688_Y, Q = \instr_fence, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5145 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1088$1232_Y, Q = \instr_fence).
Adding EN signal on $procdff$4596 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_or$src/picorv32.v:1086$1229_Y, Q = \instr_ecall_ebreak).
Adding EN signal on $procdff$4595 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1084$1219_Y, Q = \instr_rdinstrh).
Adding EN signal on $procdff$4594 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1083$1215_Y, Q = \instr_rdinstr).
Adding EN signal on $procdff$4593 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1081$1211_Y, Q = \instr_rdcycleh).
Adding EN signal on $procdff$4592 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1079$1203_Y, Q = \instr_rdcycle).
Adding SRST signal on $procdff$4591 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3702_Y, Q = \instr_and, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5152 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1077$1195_Y, Q = \instr_and).
Adding SRST signal on $procdff$4590 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3706_Y, Q = \instr_or, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5154 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1076$1191_Y, Q = \instr_or).
Adding SRST signal on $procdff$4589 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3710_Y, Q = \instr_sra, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5156 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1075$1187_Y, Q = \instr_sra).
Adding SRST signal on $procdff$4588 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3714_Y, Q = \instr_srl, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5158 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1074$1183_Y, Q = \instr_srl).
Adding SRST signal on $procdff$4587 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3718_Y, Q = \instr_xor, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5160 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1073$1179_Y, Q = \instr_xor).
Adding SRST signal on $procdff$4586 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3722_Y, Q = \instr_sltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5162 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1072$1175_Y, Q = \instr_sltu).
Adding SRST signal on $procdff$4585 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3726_Y, Q = \instr_slt, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5164 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1071$1171_Y, Q = \instr_slt).
Adding SRST signal on $procdff$4584 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3730_Y, Q = \instr_sll, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5166 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1070$1167_Y, Q = \instr_sll).
Adding SRST signal on $procdff$4583 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3734_Y, Q = \instr_sub, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5168 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1069$1163_Y, Q = \instr_sub).
Adding SRST signal on $procdff$4582 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3738_Y, Q = \instr_add, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5170 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1068$1159_Y, Q = \instr_add).
Adding EN signal on $procdff$4581 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1066$1155_Y, Q = \instr_srai).
Adding EN signal on $procdff$4580 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1065$1151_Y, Q = \instr_srli).
Adding EN signal on $procdff$4579 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1064$1147_Y, Q = \instr_slli).
Adding SRST signal on $procdff$4578 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3748_Y, Q = \instr_andi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5175 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1062$1143_Y, Q = \instr_andi).
Adding SRST signal on $procdff$4577 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3752_Y, Q = \instr_ori, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5177 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1061$1141_Y, Q = \instr_ori).
Adding SRST signal on $procdff$4576 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3756_Y, Q = \instr_xori, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5179 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1060$1139_Y, Q = \instr_xori).
Adding SRST signal on $procdff$4575 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3760_Y, Q = \instr_sltiu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5181 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1059$1137_Y, Q = \instr_sltiu).
Adding SRST signal on $procdff$4574 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3764_Y, Q = \instr_slti, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5183 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1058$1135_Y, Q = \instr_slti).
Adding SRST signal on $procdff$4573 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3768_Y, Q = \instr_addi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5185 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1057$1133_Y, Q = \instr_addi).
Adding EN signal on $procdff$4572 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1055$1131_Y, Q = \instr_sw).
Adding EN signal on $procdff$4571 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1054$1129_Y, Q = \instr_sh).
Adding EN signal on $procdff$4570 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1053$1127_Y, Q = \instr_sb).
Adding EN signal on $procdff$4569 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1051$1125_Y, Q = \instr_lhu).
Adding EN signal on $procdff$4568 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1050$1123_Y, Q = \instr_lbu).
Adding EN signal on $procdff$4567 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1049$1121_Y, Q = \instr_lw).
Adding EN signal on $procdff$4566 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1048$1119_Y, Q = \instr_lh).
Adding EN signal on $procdff$4565 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1047$1117_Y, Q = \instr_lb).
Adding SRST signal on $procdff$4564 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3788_Y, Q = \instr_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5195 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1045$1115_Y, Q = \instr_bgeu).
Adding SRST signal on $procdff$4563 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3792_Y, Q = \instr_bltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5197 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1044$1113_Y, Q = \instr_bltu).
Adding SRST signal on $procdff$4562 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3796_Y, Q = \instr_bge, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5199 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1043$1111_Y, Q = \instr_bge).
Adding SRST signal on $procdff$4561 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3800_Y, Q = \instr_blt, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5201 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1042$1109_Y, Q = \instr_blt).
Adding SRST signal on $procdff$4560 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3804_Y, Q = \instr_bne, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5203 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1041$1107_Y, Q = \instr_bne).
Adding SRST signal on $procdff$4559 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3808_Y, Q = \instr_beq, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5205 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1040$1105_Y, Q = \instr_beq).
Adding EN signal on $procdff$4558 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3821_Y, Q = \instr_jalr).
Adding EN signal on $procdff$4557 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3833_Y, Q = \instr_jal).
Adding EN signal on $procdff$4556 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $eq$src/picorv32.v:868$1033_Y, Q = \instr_auipc).
Adding EN signal on $procdff$4555 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3853_Y, Q = \instr_lui).
Adding EN signal on $procdff$4554 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \mem_rdata_q, Q = \pcpi_insn).
Adding SRST signal on $procdff$4543 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_not$src/picorv32.v:1429$1370_Y, Q = \pcpi_timeout, rval = 1'0).
Adding SRST signal on $procdff$4542 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2424_Y, Q = \pcpi_timeout_counter, rval = 4'1111).
Adding EN signal on $auto$ff.cc:266:slice$5213 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $sub$src/picorv32.v:1426$1369_Y [3:0], Q = \pcpi_timeout_counter).
Adding EN signal on $procdff$4540 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2439_Y, Q = \latched_rd).
Adding SRST signal on $procdff$4539 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2465_Y, Q = \latched_is_lb, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5222 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2465_Y, Q = \latched_is_lb).
Adding SRST signal on $procdff$4538 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2478_Y, Q = \latched_is_lh, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5232 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2478_Y, Q = \latched_is_lh).
Adding SRST signal on $procdff$4537 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2491_Y, Q = \latched_is_lu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5242 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2491_Y, Q = \latched_is_lu).
Adding EN signal on $procdff$4535 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \compressed_instr, Q = \latched_compr).
Adding SRST signal on $procdff$4534 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2536_Y, Q = \latched_branch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5255 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2536_Y, Q = \latched_branch).
Adding SRST signal on $procdff$4533 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2572_Y, Q = \latched_stalu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5259 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2572_Y, Q = \latched_stalu).
Adding SRST signal on $procdff$4532 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2579_Y, Q = \latched_store, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5267 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2579_Y, Q = \latched_store).
Adding EN signal on $procdff$4528 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 2'00, Q = \irq_state).
Adding SRST signal on $procdff$4521 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2197_Y, Q = \decoder_pseudo_trigger, rval = 1'0).
Adding SRST signal on $procdff$4518 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2849_Y, Q = \mem_do_wdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$5281 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 1'0, Q = \mem_do_wdata).
Adding SRST signal on $procdff$4517 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2853_Y, Q = \mem_do_rdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$5283 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 1'0, Q = \mem_do_rdata).
Adding SRST signal on $procdff$4516 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2927_Y, Q = \mem_do_rinst, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$5285 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2927_Y, Q = \mem_do_rinst).
Adding SRST signal on $procdff$4515 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2952_Y, Q = \mem_do_prefetch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5297 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $logic_and$src/picorv32.v:1573$1428_Y, Q = \mem_do_prefetch).
Adding EN signal on $procdff$4506 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3075_Y, Q = \reg_op2).
Adding EN signal on $procdff$4505 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3097_Y, Q = \reg_op1).
Adding SRST signal on $procdff$4504 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3160_Y, Q = \reg_next_pc, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$5319 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3149_Y, Q = \reg_next_pc).
Adding SRST signal on $procdff$4503 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3172_Y, Q = \reg_pc, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$5321 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $3\current_pc[31:0], Q = \reg_pc).
Adding SRST signal on $procdff$4502 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3192_Y, Q = \count_instr, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$5323 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $add$src/picorv32.v:1564$1424_Y, Q = \count_instr).
Adding SRST signal on $procdff$4501 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $add$src/picorv32.v:1433$1371_Y, Q = \count_cycle, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $procdff$4498 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 0, Q = \eoi).
Adding SRST signal on $procdff$4497 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3236_Y, Q = \pcpi_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5329 ($sdff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3232_Y, Q = \pcpi_valid).
Adding SRST signal on $procdff$4496 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$2418_Y, Q = \trap, rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$5328 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5277 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$5277 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5144 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5143 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5142 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5141 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5140 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5139 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5134 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Adding SRST signal on $procdff$4494 ($dff) from module picorv32_pcpi_mul (D = $procmux$1609_Y, Q = \instr_mulhu, rval = 1'0).
Adding SRST signal on $procdff$4493 ($dff) from module picorv32_pcpi_mul (D = $procmux$1614_Y, Q = \instr_mulhsu, rval = 1'0).
Adding SRST signal on $procdff$4492 ($dff) from module picorv32_pcpi_mul (D = $procmux$1620_Y, Q = \instr_mulh, rval = 1'0).
Adding SRST signal on $procdff$4491 ($dff) from module picorv32_pcpi_mul (D = $procmux$1627_Y, Q = \instr_mul, rval = 1'0).
Adding SRST signal on $procdff$4489 ($dff) from module picorv32_pcpi_mul (D = $procmux$1557_Y, Q = \mul_finish, rval = 1'0).
Adding SRST signal on $procdff$4488 ($dff) from module picorv32_pcpi_mul (D = $procmux$1568_Y, Q = \mul_waiting, rval = 1'1).
Adding EN signal on $procdff$4487 ($dff) from module picorv32_pcpi_mul (D = $procmux$1574_Y, Q = \mul_counter).
Adding EN signal on $procdff$4486 ($dff) from module picorv32_pcpi_mul (D = $procmux$1580_Y, Q = \rdx).
Adding SRST signal on $auto$ff.cc:266:slice$5346 ($dffe) from module picorv32_pcpi_mul (D = { \next_rdx [60] \next_rdx [56] \next_rdx [52] \next_rdx [48] \next_rdx [44] \next_rdx [40] \next_rdx [36] \next_rdx [32] \next_rdx [28] \next_rdx [24] \next_rdx [20] \next_rdx [16] \next_rdx [12] \next_rdx [8] \next_rdx [4] }, Q = { \rdx [60] \rdx [56] \rdx [52] \rdx [48] \rdx [44] \rdx [40] \rdx [36] \rdx [32] \rdx [28] \rdx [24] \rdx [20] \rdx [16] \rdx [12] \rdx [8] \rdx [4] }, rval = 15'000000000000000).
Adding EN signal on $procdff$4485 ($dff) from module picorv32_pcpi_mul (D = $procmux$1586_Y, Q = \rd).
Adding SRST signal on $auto$ff.cc:266:slice$5349 ($dffe) from module picorv32_pcpi_mul (D = \next_rd, Q = \rd, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $procdff$4484 ($dff) from module picorv32_pcpi_mul (D = $procmux$1595_Y, Q = \rs2).
Adding SRST signal on $auto$ff.cc:266:slice$5351 ($dffe) from module picorv32_pcpi_mul (D = $procmux$1593_Y [0], Q = \rs2 [0], rval = 1'0).
Adding EN signal on $procdff$4483 ($dff) from module picorv32_pcpi_mul (D = $procmux$1604_Y, Q = \rs1).
Adding SRST signal on $auto$ff.cc:266:slice$5354 ($dffe) from module picorv32_pcpi_mul (D = \pcpi_rs1 [31], Q = \rs1 [63], rval = 1'0).
Adding EN signal on $procdff$4481 ($dff) from module picorv32_pcpi_mul (D = $ternary$src/picorv32.v:2313$760_Y [31:0], Q = \pcpi_rd).

5.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 189 unused cells and 230 unused wires.
<suppressed ~192 debug messages>

5.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~16 debug messages>
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.8.9. Rerunning OPT passes. (Maybe there is more to do..)

5.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~497 debug messages>

5.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 0 changes.

5.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
<suppressed ~57 debug messages>
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 19 cells.

5.8.13. Executing OPT_DFF pass (perform DFF optimizations).

5.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 0 unused cells and 21 unused wires.
<suppressed ~1 debug messages>

5.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.8.16. Rerunning OPT passes. (Maybe there is more to do..)

5.8.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~497 debug messages>

5.8.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 0 changes.

5.8.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.8.20. Executing OPT_DFF pass (perform DFF optimizations).

5.8.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..

5.8.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.8.23. Finished fast OPT passes. (There is nothing left to do.)

5.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$5009 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4816 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4812 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$5000 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4763 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4808 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4761 ($eq).
Removed top 3 bits (of 4) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4804 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$opt_dff.cc:248:make_patterns_logic$5078 ($ne).
Removed top 3 bits (of 5) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4757 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4800 ($eq).
Removed top 2 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4753 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$5033 ($eq).
Removed top 3 bits (of 4) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$5029 ($eq).
Removed top 3 bits (of 4) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4796 ($eq).
Removed top 2 bits (of 5) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4820 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4826 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4792 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4776 ($eq).
Removed top 2 bits (of 5) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4788 ($eq).
Removed top 2 bits (of 5) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4772 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4784 ($eq).
Removed top 3 bits (of 5) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4770 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$opt_dff.cc:248:make_patterns_logic$5116 ($ne).
Removed top 3 bits (of 4) from port A of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$shl$src/picorv32.v:419$954 ($shl).
Removed top 3 bits (of 5) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:465$959 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:478$961 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:486$963 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:488$965 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4900 ($eq).
Removed top 1 bits (of 7) from mux cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$ternary$src/picorv32.v:491$969 ($mux).
Removed top 3 bits (of 5) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4916 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4904 ($eq).
Removed top 30 bits (of 32) from mux cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$ternary$src/picorv32.v:617$1013 ($mux).
Removed top 1 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:867$1032 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:868$1033 ($eq).
Removed top 5 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:875$1047 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:876$1048 ($eq).
Removed top 2 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:877$1049 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:878$1050 ($eq).
Removed top 28 bits (of 32) from port A of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$add$src/picorv32.v:908$1063 ($add).
Removed top 27 bits (of 32) from port Y of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$add$src/picorv32.v:908$1063 ($add).
Removed top 28 bits (of 32) from port A of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$add$src/picorv32.v:912$1064 ($add).
Removed top 27 bits (of 32) from port Y of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$add$src/picorv32.v:912$1064 ($add).
Removed top 3 bits (of 6) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4833 ($eq).
Removed top 3 bits (of 8) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4837 ($eq).
Removed top 2 bits (of 5) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4841 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4845 ($eq).
Removed top 2 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:1041$1106 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:1049$1120 ($eq).
Removed top 2 bits (of 5) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4850 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4854 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:1059$1136 ($eq).
Removed top 7 bits (of 8) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4858 ($eq).
Removed top 3 bits (of 4) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4908 ($eq).
Removed top 1 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:1066$1154 ($eq).
Removed top 3 bits (of 10) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4862 ($eq).
Removed top 2 bits (of 4) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4866 ($eq).
Removed top 3 bits (of 6) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4870 ($eq).
Removed top 5 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4875 ($eq).
Removed top 3 bits (of 9) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4879 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$eq$src/picorv32.v:1088$1230 ($eq).
Removed top 3 bits (of 7) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4920 ($eq).
Removed top 29 bits (of 32) from mux cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$ternary$src/picorv32.v:1317$1329 ($mux).
Removed top 29 bits (of 32) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$add$src/picorv32.v:1317$1330 ($add).
Removed top 31 bits (of 32) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$sub$src/picorv32.v:1426$1369 ($sub).
Removed top 28 bits (of 32) from port Y of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$sub$src/picorv32.v:1426$1369 ($sub).
Removed top 31 bits (of 32) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$add$src/picorv32.v:1433$1371 ($add).
Removed top 3 bits (of 8) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4749 ($eq).
Removed top 29 bits (of 32) from mux cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$ternary$src/picorv32.v:1560$1422 ($mux).
Removed top 29 bits (of 32) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$add$src/picorv32.v:1560$1423 ($add).
Removed top 31 bits (of 32) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$add$src/picorv32.v:1564$1424 ($add).
Removed top 3 bits (of 6) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4912 ($eq).
Removed top 1 bits (of 33) from port Y of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$sshr$src/picorv32.v:1245$1549 ($sshr).
Removed top 1 bits (of 2) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$opt_dff.cc:248:make_patterns_logic$5229 ($ne).
Removed top 1 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$3377_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$3379_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$3382_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$3440 ($mux).
Removed top 1 bits (of 4) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$opt_dff.cc:248:make_patterns_logic$5290 ($ne).
Removed top 1 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$opt_dff.cc:248:make_patterns_logic$5292 ($ne).
Removed top 1 bits (of 2) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$opt_dff.cc:248:make_patterns_logic$5314 ($ne).
Removed top 2 bits (of 3) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$3664_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$4103_CMP0 ($eq).
Removed top 2 bits (of 6) from mux cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$4418 ($mux).
Removed top 1 bits (of 2) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$4437_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4780 ($eq).
Removed top 2 bits (of 6) from port B of cell $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$auto$fsm_map.cc:77:implement_pattern_cache$4745 ($eq).
Removed top 27 bits (of 32) from wire $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$add$src/picorv32.v:908$1063_Y.
Removed top 27 bits (of 32) from wire $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$add$src/picorv32.v:912$1064_Y.
Removed top 29 bits (of 32) from wire $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$3093_Y.
Removed top 1 bits (of 32) from wire $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$3095_Y.
Removed top 2 bits (of 4) from wire $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$procmux$3440_Y.
Removed top 28 bits (of 32) from wire $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$sub$src/picorv32.v:1426$1369_Y.
Removed top 29 bits (of 32) from wire $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$ternary$src/picorv32.v:1317$1329_Y.
Removed top 29 bits (of 32) from wire $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.$ternary$src/picorv32.v:1560$1422_Y.
Removed top 2 bits (of 3) from port B of cell picorv32_pcpi_mul.$procmux$1621_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32_pcpi_mul.$procmux$1615_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32_pcpi_mul.$procmux$1610_CMP0 ($eq).
Removed top 1 bits (of 64) from mux cell picorv32_pcpi_mul.$procmux$1604 ($mux).
Removed top 1 bits (of 64) from mux cell picorv32_pcpi_mul.$procmux$1602 ($mux).
Removed cell picorv32_pcpi_mul.$procmux$1580 ($mux).
Removed top 1 bits (of 7) from port B of cell picorv32_pcpi_mul.$eq$src/picorv32.v:2227$710 ($eq).
Removed top 6 bits (of 7) from port B of cell picorv32_pcpi_mul.$eq$src/picorv32.v:2227$712 ($eq).
Removed top 1 bits (of 5) from port Y of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$748 ($add).
Removed top 1 bits (of 5) from port A of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$748 ($add).
Removed top 26 bits (of 32) from mux cell picorv32_pcpi_mul.$ternary$src/picorv32.v:2291$754 ($mux).
Removed top 31 bits (of 32) from port B of cell picorv32_pcpi_mul.$sub$src/picorv32.v:2299$756 ($sub).
Removed top 25 bits (of 32) from port Y of cell picorv32_pcpi_mul.$sub$src/picorv32.v:2299$756 ($sub).
Removed top 32 bits (of 64) from mux cell picorv32_pcpi_mul.$ternary$src/picorv32.v:2313$760 ($mux).
Removed cell picorv32_pcpi_mul.$auto$ff.cc:266:slice$5348 ($dffe).
Removed top 3 bits (of 4) from port B of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$733 ($add).
Removed top 3 bits (of 4) from port B of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$735 ($add).
Removed top 3 bits (of 4) from port B of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$737 ($add).
Removed top 3 bits (of 4) from port B of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$739 ($add).
Removed top 3 bits (of 4) from port B of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$741 ($add).
Removed top 3 bits (of 4) from port B of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$743 ($add).
Removed top 3 bits (of 4) from port B of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$745 ($add).
Removed top 3 bits (of 4) from port B of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$747 ($add).
Removed top 1 bits (of 5) from port Y of cell picorv32_pcpi_mul.$add$src/picorv32.v:2265$747 ($add).
Removed top 1 bits (of 5) from wire picorv32_pcpi_mul.$add$src/picorv32.v:2265$747_Y.
Removed top 1 bits (of 64) from wire picorv32_pcpi_mul.$procmux$1602_Y.
Removed top 1 bits (of 64) from wire picorv32_pcpi_mul.$procmux$1604_Y.
Removed top 25 bits (of 32) from wire picorv32_pcpi_mul.$sub$src/picorv32.v:2299$756_Y.
Removed top 26 bits (of 32) from wire picorv32_pcpi_mul.$ternary$src/picorv32.v:2291$754_Y.
Removed top 32 bits (of 64) from wire picorv32_pcpi_mul.$ternary$src/picorv32.v:2313$760_Y.
Removed top 4 bits (of 64) from wire picorv32_pcpi_mul.next_rdt.
Removed top 3 bits (of 64) from wire picorv32_pcpi_mul.next_rdx.
Removed top 1 bits (of 64) from wire picorv32_pcpi_mul.next_rs1.
Removed top 3 bits (of 64) from wire picorv32_pcpi_mul.rdx.

5.10. Executing PEEPOPT pass (run peephole optimizers).

5.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 0 unused cells and 20 unused wires.
<suppressed ~2 debug messages>

5.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32:
  creating $macc model for $add$src/picorv32.v:1240$1541 ($add).
  creating $macc model for $add$src/picorv32.v:1317$1330 ($add).
  creating $macc model for $add$src/picorv32.v:1433$1371 ($add).
  creating $macc model for $add$src/picorv32.v:1560$1423 ($add).
  creating $macc model for $add$src/picorv32.v:1564$1424 ($add).
  creating $macc model for $add$src/picorv32.v:1569$1425 ($add).
  creating $macc model for $add$src/picorv32.v:1806$1472 ($add).
  creating $macc model for $add$src/picorv32.v:1869$1497 ($add).
  creating $macc model for $add$src/picorv32.v:382$937 ($add).
  creating $macc model for $add$src/picorv32.v:908$1063 ($add).
  creating $macc model for $add$src/picorv32.v:912$1064 ($add).
  creating $macc model for $sub$src/picorv32.v:1240$1540 ($sub).
  creating $macc model for $sub$src/picorv32.v:1426$1369 ($sub).
  creating $alu model for $macc $sub$src/picorv32.v:1426$1369.
  creating $alu model for $macc $sub$src/picorv32.v:1240$1540.
  creating $alu model for $macc $add$src/picorv32.v:912$1064.
  creating $alu model for $macc $add$src/picorv32.v:908$1063.
  creating $alu model for $macc $add$src/picorv32.v:382$937.
  creating $alu model for $macc $add$src/picorv32.v:1869$1497.
  creating $alu model for $macc $add$src/picorv32.v:1806$1472.
  creating $alu model for $macc $add$src/picorv32.v:1569$1425.
  creating $alu model for $macc $add$src/picorv32.v:1564$1424.
  creating $alu model for $macc $add$src/picorv32.v:1560$1423.
  creating $alu model for $macc $add$src/picorv32.v:1433$1371.
  creating $alu model for $macc $add$src/picorv32.v:1317$1330.
  creating $alu model for $macc $add$src/picorv32.v:1240$1541.
  creating $alu model for $lt$src/picorv32.v:1242$1544 ($lt): new $alu
  creating $alu model for $lt$src/picorv32.v:1243$1545 ($lt): merged with $sub$src/picorv32.v:1240$1540.
  creating $alu model for $eq$src/picorv32.v:1241$1543 ($eq): merged with $sub$src/picorv32.v:1240$1540.
  creating $alu cell for $add$src/picorv32.v:1317$1330: $auto$alumacc.cc:495:replace_alu$5379
  creating $alu cell for $add$src/picorv32.v:1433$1371: $auto$alumacc.cc:495:replace_alu$5382
  creating $alu cell for $add$src/picorv32.v:1560$1423: $auto$alumacc.cc:495:replace_alu$5385
  creating $alu cell for $add$src/picorv32.v:1564$1424: $auto$alumacc.cc:495:replace_alu$5388
  creating $alu cell for $add$src/picorv32.v:1569$1425: $auto$alumacc.cc:495:replace_alu$5391
  creating $alu cell for $add$src/picorv32.v:1806$1472: $auto$alumacc.cc:495:replace_alu$5394
  creating $alu cell for $add$src/picorv32.v:1869$1497: $auto$alumacc.cc:495:replace_alu$5397
  creating $alu cell for $add$src/picorv32.v:382$937: $auto$alumacc.cc:495:replace_alu$5400
  creating $alu cell for $add$src/picorv32.v:908$1063: $auto$alumacc.cc:495:replace_alu$5403
  creating $alu cell for $add$src/picorv32.v:912$1064: $auto$alumacc.cc:495:replace_alu$5406
  creating $alu cell for $lt$src/picorv32.v:1242$1544: $auto$alumacc.cc:495:replace_alu$5409
  creating $alu cell for $add$src/picorv32.v:1240$1541: $auto$alumacc.cc:495:replace_alu$5416
  creating $alu cell for $sub$src/picorv32.v:1240$1540, $lt$src/picorv32.v:1243$1545, $eq$src/picorv32.v:1241$1543: $auto$alumacc.cc:495:replace_alu$5419
  creating $alu cell for $sub$src/picorv32.v:1426$1369: $auto$alumacc.cc:495:replace_alu$5426
  created 14 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module picorv32_pcpi_mul:
  creating $macc model for $add$src/picorv32.v:2265$717 ($add).
  creating $macc model for $add$src/picorv32.v:2265$718 ($add).
  creating $macc model for $add$src/picorv32.v:2265$719 ($add).
  creating $macc model for $add$src/picorv32.v:2265$720 ($add).
  creating $macc model for $add$src/picorv32.v:2265$721 ($add).
  creating $macc model for $add$src/picorv32.v:2265$722 ($add).
  creating $macc model for $add$src/picorv32.v:2265$723 ($add).
  creating $macc model for $add$src/picorv32.v:2265$724 ($add).
  creating $macc model for $add$src/picorv32.v:2265$725 ($add).
  creating $macc model for $add$src/picorv32.v:2265$726 ($add).
  creating $macc model for $add$src/picorv32.v:2265$727 ($add).
  creating $macc model for $add$src/picorv32.v:2265$728 ($add).
  creating $macc model for $add$src/picorv32.v:2265$729 ($add).
  creating $macc model for $add$src/picorv32.v:2265$730 ($add).
  creating $macc model for $add$src/picorv32.v:2265$731 ($add).
  creating $macc model for $add$src/picorv32.v:2265$732 ($add).
  creating $macc model for $add$src/picorv32.v:2265$733 ($add).
  creating $macc model for $add$src/picorv32.v:2265$734 ($add).
  creating $macc model for $add$src/picorv32.v:2265$735 ($add).
  creating $macc model for $add$src/picorv32.v:2265$736 ($add).
  creating $macc model for $add$src/picorv32.v:2265$737 ($add).
  creating $macc model for $add$src/picorv32.v:2265$738 ($add).
  creating $macc model for $add$src/picorv32.v:2265$739 ($add).
  creating $macc model for $add$src/picorv32.v:2265$740 ($add).
  creating $macc model for $add$src/picorv32.v:2265$741 ($add).
  creating $macc model for $add$src/picorv32.v:2265$742 ($add).
  creating $macc model for $add$src/picorv32.v:2265$743 ($add).
  creating $macc model for $add$src/picorv32.v:2265$744 ($add).
  creating $macc model for $add$src/picorv32.v:2265$745 ($add).
  creating $macc model for $add$src/picorv32.v:2265$746 ($add).
  creating $macc model for $add$src/picorv32.v:2265$747 ($add).
  creating $macc model for $add$src/picorv32.v:2265$748 ($add).
  creating $macc model for $sub$src/picorv32.v:2299$756 ($sub).
  merging $macc model for $add$src/picorv32.v:2265$747 into $add$src/picorv32.v:2265$748.
  merging $macc model for $add$src/picorv32.v:2265$745 into $add$src/picorv32.v:2265$746.
  merging $macc model for $add$src/picorv32.v:2265$743 into $add$src/picorv32.v:2265$744.
  merging $macc model for $add$src/picorv32.v:2265$741 into $add$src/picorv32.v:2265$742.
  merging $macc model for $add$src/picorv32.v:2265$739 into $add$src/picorv32.v:2265$740.
  merging $macc model for $add$src/picorv32.v:2265$737 into $add$src/picorv32.v:2265$738.
  merging $macc model for $add$src/picorv32.v:2265$735 into $add$src/picorv32.v:2265$736.
  merging $macc model for $add$src/picorv32.v:2265$733 into $add$src/picorv32.v:2265$734.
  merging $macc model for $add$src/picorv32.v:2265$731 into $add$src/picorv32.v:2265$732.
  merging $macc model for $add$src/picorv32.v:2265$729 into $add$src/picorv32.v:2265$730.
  merging $macc model for $add$src/picorv32.v:2265$727 into $add$src/picorv32.v:2265$728.
  merging $macc model for $add$src/picorv32.v:2265$725 into $add$src/picorv32.v:2265$726.
  merging $macc model for $add$src/picorv32.v:2265$723 into $add$src/picorv32.v:2265$724.
  merging $macc model for $add$src/picorv32.v:2265$721 into $add$src/picorv32.v:2265$722.
  merging $macc model for $add$src/picorv32.v:2265$719 into $add$src/picorv32.v:2265$720.
  merging $macc model for $add$src/picorv32.v:2265$717 into $add$src/picorv32.v:2265$718.
  creating $alu model for $macc $add$src/picorv32.v:2265$738.
  creating $alu model for $macc $add$src/picorv32.v:2265$742.
  creating $alu model for $macc $add$src/picorv32.v:2265$736.
  creating $alu model for $macc $add$src/picorv32.v:2265$744.
  creating $alu model for $macc $add$src/picorv32.v:2265$740.
  creating $alu model for $macc $add$src/picorv32.v:2265$746.
  creating $alu model for $macc $add$src/picorv32.v:2265$734.
  creating $alu model for $macc $add$src/picorv32.v:2265$748.
  creating $alu model for $macc $sub$src/picorv32.v:2299$756.
  creating $macc cell for $add$src/picorv32.v:2265$724: $auto$alumacc.cc:365:replace_macc$5429
  creating $macc cell for $add$src/picorv32.v:2265$730: $auto$alumacc.cc:365:replace_macc$5430
  creating $macc cell for $add$src/picorv32.v:2265$722: $auto$alumacc.cc:365:replace_macc$5431
  creating $macc cell for $add$src/picorv32.v:2265$726: $auto$alumacc.cc:365:replace_macc$5432
  creating $macc cell for $add$src/picorv32.v:2265$720: $auto$alumacc.cc:365:replace_macc$5433
  creating $macc cell for $add$src/picorv32.v:2265$732: $auto$alumacc.cc:365:replace_macc$5434
  creating $macc cell for $add$src/picorv32.v:2265$718: $auto$alumacc.cc:365:replace_macc$5435
  creating $macc cell for $add$src/picorv32.v:2265$728: $auto$alumacc.cc:365:replace_macc$5436
  creating $alu cell for $sub$src/picorv32.v:2299$756: $auto$alumacc.cc:495:replace_alu$5437
  creating $alu cell for $add$src/picorv32.v:2265$748: $auto$alumacc.cc:495:replace_alu$5440
  creating $alu cell for $add$src/picorv32.v:2265$734: $auto$alumacc.cc:495:replace_alu$5443
  creating $alu cell for $add$src/picorv32.v:2265$746: $auto$alumacc.cc:495:replace_alu$5446
  creating $alu cell for $add$src/picorv32.v:2265$740: $auto$alumacc.cc:495:replace_alu$5449
  creating $alu cell for $add$src/picorv32.v:2265$744: $auto$alumacc.cc:495:replace_alu$5452
  creating $alu cell for $add$src/picorv32.v:2265$736: $auto$alumacc.cc:495:replace_alu$5455
  creating $alu cell for $add$src/picorv32.v:2265$742: $auto$alumacc.cc:495:replace_alu$5458
  creating $alu cell for $add$src/picorv32.v:2265$738: $auto$alumacc.cc:495:replace_alu$5461
  created 9 $alu and 8 $macc cells.
Extracting $alu and $macc cells in module soc:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module wb_interconnect:
  created 0 $alu and 0 $macc cells.

5.13. Executing SHARE pass (SAT-based resource sharing).
Found 4 cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$src/picorv32.v:1245$1549 ($sshr):
    Found 1 activation_patterns using ctrl signal $logic_and$src/picorv32.v:1282$1320_Y.
    No candidates found.
  Analyzing resource sharing options for $shl$src/picorv32.v:1244$1546 ($shl):
    Found 1 activation_patterns using ctrl signal $logic_and$src/picorv32.v:1280$1316_Y.
    No candidates found.
  Analyzing resource sharing options for $memrd$\cpuregs$src/picorv32.v:1353$1352 ($memrd):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$src/picorv32.v:1353$1353_Y $procmux$2396_CTRL $auto$opt_reduce.cc:137:opt_pmux$4668 \is_lui_auipc_jal }.
    Found 1 candidates: $memrd$\cpuregs$src/picorv32.v:1352$1349
    Analyzing resource sharing with $memrd$\cpuregs$src/picorv32.v:1352$1349 ($memrd):
      Found 1 activation_patterns using ctrl signal { $reduce_bool$src/picorv32.v:1352$1350_Y \cpu_state [2] \is_rdcycle_rdcycleh_rdinstr_rdinstrh \is_lui_auipc_jal }.
      Activation pattern for cell $memrd$\cpuregs$src/picorv32.v:1353$1352: { $reduce_bool$src/picorv32.v:1353$1353_Y $procmux$2396_CTRL $auto$opt_reduce.cc:137:opt_pmux$4668 \is_lui_auipc_jal } = 4'1000
      Activation pattern for cell $memrd$\cpuregs$src/picorv32.v:1352$1349: { $reduce_bool$src/picorv32.v:1352$1350_Y \cpu_state [2] \is_rdcycle_rdcycleh_rdinstr_rdinstrh \is_lui_auipc_jal } = 4'1100
      Size of SAT problem: 8 cells, 131 variables, 277 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $reduce_bool$src/picorv32.v:1353$1353_Y $reduce_bool$src/picorv32.v:1352$1350_Y $procmux$2396_CTRL \cpu_state [2] $auto$opt_reduce.cc:137:opt_pmux$4668 \is_rdcycle_rdcycleh_rdinstr_rdinstrh \is_lui_auipc_jal } = 7'1101000
  Analyzing resource sharing options for $memrd$\cpuregs$src/picorv32.v:1352$1349 ($memrd):
    Found 1 activation_patterns using ctrl signal { $reduce_bool$src/picorv32.v:1352$1350_Y \cpu_state [2] \is_rdcycle_rdcycleh_rdinstr_rdinstrh \is_lui_auipc_jal }.
    No candidates found.

5.14. Executing OPT pass (performing simple optimizations).

5.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~1 debug messages>
Optimizing module picorv32_pcpi_mul.
<suppressed ~1 debug messages>
Optimizing module soc.
Optimizing module wb_interconnect.

5.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~492 debug messages>

5.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 0 changes.

5.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.14.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$5345 ($dffe) from module picorv32_pcpi_mul (D = $auto$wreduce.cc:514:run$5371 [6], Q = \mul_counter [6], rval = 1'0).

5.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 15 unused cells and 20 unused wires.
<suppressed ~18 debug messages>

5.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.14.9. Rerunning OPT passes. (Maybe there is more to do..)

5.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~492 debug messages>

5.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 0 changes.

5.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.14.13. Executing OPT_DFF pass (perform DFF optimizations).

5.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..

5.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.14.16. Finished fast OPT passes. (There is nothing left to do.)

5.15. Executing MEMORY pass.

5.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

5.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.cpuregs write port 0.

5.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

5.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\cpuregs'[0] in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\cpuregs'[1] in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32': no output FF found.
Checking read port address `\cpuregs'[0] in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32': merged address FF to cell.
Checking read port address `\cpuregs'[1] in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32': merged address FF to cell.

5.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..

5.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.cpuregs by address:

5.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

5.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..

5.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

5.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..

5.17. Executing OPT pass (performing simple optimizations).

5.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~134 debug messages>
Optimizing module picorv32_pcpi_mul.
<suppressed ~6 debug messages>
Optimizing module soc.
Optimizing module wb_interconnect.

5.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
<suppressed ~3 debug messages>
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 1 cells.

5.17.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$5106 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4198_Y, Q = \mem_valid, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5070 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$4140_Y, Q = \mem_state, rval = 2'00).
Adding SRST signal on $auto$ff.cc:266:slice$5215 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \decoded_rd, Q = \latched_rd, rval = 5'00000).

5.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 13 unused cells and 80 unused wires.
<suppressed ~18 debug messages>

5.17.5. Rerunning OPT passes. (Removed registers in this run.)

5.17.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.17.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.17.8. Executing OPT_DFF pass (perform DFF optimizations).

5.17.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..

5.17.10. Finished fast OPT passes.

5.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \cpuregs in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32:
  created 32 $dff cells and 0 static cells of width 32.
Extracted addr FF from read port 0 of $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.cpuregs: $\cpuregs$rdreg[0]
Extracted addr FF from read port 1 of $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.cpuregs: $\cpuregs$rdreg[1]
  read interface: 2 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

5.19. Executing OPT pass (performing simple optimizations).

5.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~10 debug messages>
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~559 debug messages>

5.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
    Consolidated identical input bits for $pmux cell $procmux$2323:
      Old ports: A=\mem_rdata_word, B={ \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15:0] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7:0] }, Y=$procmux$2323_Y
      New ports: A=\mem_rdata_word [31:8], B={ \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15] \mem_rdata_word [15:7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] \mem_rdata_word [7] }, Y=$procmux$2323_Y [31:8]
      New connections: $procmux$2323_Y [7:0] = \mem_rdata_word [7:0]
    New ctrl vector for $pmux cell $procmux$2889: { $auto$opt_reduce.cc:137:opt_pmux$5972 $auto$opt_reduce.cc:137:opt_pmux$4664 }
    New ctrl vector for $pmux cell $procmux$3097: $auto$opt_reduce.cc:137:opt_pmux$5974
    New ctrl vector for $pmux cell $procmux$3360: { $procmux$3379_CMP $procmux$3361_CMP }
    New ctrl vector for $pmux cell $procmux$3362: { $procmux$3359_CMP $procmux$3377_CMP }
    Consolidated identical input bits for $mux cell $procmux$3412:
      Old ports: A={ \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] \mem_rdata_latched [31] }, B={ \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] }, Y=$procmux$3412_Y
      New ports: A=\mem_rdata_latched [31], B=\mem_rdata_latched [12], Y=$procmux$3412_Y [0]
      New connections: $procmux$3412_Y [11:1] = { $procmux$3412_Y [0] $procmux$3412_Y [0] $procmux$3412_Y [0] $procmux$3412_Y [0] $procmux$3412_Y [0] $procmux$3412_Y [0] $procmux$3412_Y [0] $procmux$3412_Y [0] $procmux$3412_Y [0] $procmux$3412_Y [0] $procmux$3412_Y [0] }
    Consolidated identical input bits for $mux cell $procmux$3440:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:514:run$5364 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:514:run$5364 [1]
      New connections: $auto$wreduce.cc:514:run$5364 [0] = 1'0
    Consolidated identical input bits for $mux cell $procmux$3618:
      Old ports: A=5'00000, B={ 2'01 \mem_rdata_latched [4:2] }, Y=$procmux$3618_Y
      New ports: A=4'0000, B={ 1'1 \mem_rdata_latched [4:2] }, Y=$procmux$3618_Y [3:0]
      New connections: $procmux$3618_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $procmux$3625:
      Old ports: A=\mem_rdata_latched [19:12], B={ \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] }, Y=$procmux$3625_Y
      New ports: A=\mem_rdata_latched [19:13], B={ \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] }, Y=$procmux$3625_Y [7:1]
      New connections: $procmux$3625_Y [0] = \mem_rdata_latched [12]
    Consolidated identical input bits for $mux cell $procmux$3650:
      Old ports: A=5'00000, B={ 2'01 \mem_rdata_latched [9:7] }, Y=$procmux$3650_Y
      New ports: A=4'0000, B={ 1'1 \mem_rdata_latched [9:7] }, Y=$procmux$3650_Y [3:0]
      New connections: $procmux$3650_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $procmux$3668:
      Old ports: A=5'00000, B={ 2'01 \mem_rdata_latched [4:2] }, Y=$procmux$3668_Y
      New ports: A=4'0000, B={ 1'1 \mem_rdata_latched [4:2] }, Y=$procmux$3668_Y [3:0]
      New connections: $procmux$3668_Y [4] = 1'0
    New ctrl vector for $pmux cell $procmux$4140: { $procmux$4103_CMP $auto$opt_reduce.cc:137:opt_pmux$5976 }
    Consolidated identical input bits for $mux cell $procmux$4292:
      Old ports: A={ \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] \mem_rdata_latched [12] }, B={ \mem_rdata_latched [6] 4'0000 }, Y=$procmux$4292_Y
      New ports: A={ \mem_rdata_latched [12] \mem_rdata_latched [12] }, B={ \mem_rdata_latched [6] 1'0 }, Y={ $procmux$4292_Y [4] $procmux$4292_Y [0] }
      New connections: $procmux$4292_Y [3:1] = { $procmux$4292_Y [0] $procmux$4292_Y [0] $procmux$4292_Y [0] }
    Consolidated identical input bits for $pmux cell $procmux$4434:
      Old ports: A={ 24'000000000000000000000000 \mem_rdata [7:0] }, B={ 24'000000000000000000000000 \mem_rdata [15:8] 24'000000000000000000000000 \mem_rdata [23:16] 24'000000000000000000000000 \mem_rdata [31:24] }, Y=$3\mem_rdata_word[31:0]
      New ports: A=\mem_rdata [7:0], B={ \mem_rdata [15:8] \mem_rdata [23:16] \mem_rdata [31:24] }, Y=$3\mem_rdata_word[31:0] [7:0]
      New connections: $3\mem_rdata_word[31:0] [31:8] = 24'000000000000000000000000
    Consolidated identical input bits for $mux cell $procmux$4443:
      Old ports: A={ 16'0000000000000000 \mem_rdata [15:0] }, B={ 16'0000000000000000 \mem_rdata [31:16] }, Y=$2\mem_rdata_word[31:0]
      New ports: A=\mem_rdata [15:0], B=\mem_rdata [31:16], Y=$2\mem_rdata_word[31:0] [15:0]
      New connections: $2\mem_rdata_word[31:0] [31:16] = 16'0000000000000000
    Consolidated identical input bits for $pmux cell $procmux$4459:
      Old ports: A=\reg_op2, B={ \reg_op2 [15:0] \reg_op2 [15:0] \reg_op2 [7:0] \reg_op2 [7:0] \reg_op2 [7:0] \reg_op2 [7:0] }, Y=\mem_la_wdata
      New ports: A=\reg_op2 [31:8], B={ \reg_op2 [15:0] \reg_op2 [15:0] \reg_op2 [7:0] \reg_op2 [7:0] }, Y=\mem_la_wdata [31:8]
      New connections: \mem_la_wdata [7:0] = \reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $ternary$src/picorv32.v:1317$1329:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:514:run$5366 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:514:run$5366 [2:1]
      New connections: $auto$wreduce.cc:514:run$5366 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$src/picorv32.v:1560$1422:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:514:run$5367 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:514:run$5367 [2:1]
      New connections: $auto$wreduce.cc:514:run$5367 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$src/picorv32.v:382$938:
      Old ports: A={ \reg_op1 [31:2] 2'00 }, B={ $add$src/picorv32.v:382$937_Y 2'00 }, Y=\mem_la_addr
      New ports: A=\reg_op1 [31:2], B=$add$src/picorv32.v:382$937_Y, Y=\mem_la_addr [31:2]
      New connections: \mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$src/picorv32.v:411$953:
      Old ports: A=4'0011, B=4'1100, Y=$ternary$src/picorv32.v:411$953_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$src/picorv32.v:411$953_Y [2] $ternary$src/picorv32.v:411$953_Y [0] }
      New connections: { $ternary$src/picorv32.v:411$953_Y [3] $ternary$src/picorv32.v:411$953_Y [1] } = { $ternary$src/picorv32.v:411$953_Y [2] $ternary$src/picorv32.v:411$953_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$src/picorv32.v:491$969:
      Old ports: A=6'000000, B=6'100000, Y=$ternary$src/picorv32.v:491$969_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$ternary$src/picorv32.v:491$969_Y [5]
      New connections: $ternary$src/picorv32.v:491$969_Y [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$src/picorv32.v:617$1013:
      Old ports: A=2'11, B=2'00, Y=$procmux$4146_Y
      New ports: A=1'1, B=1'0, Y=$procmux$4146_Y [0]
      New connections: $procmux$4146_Y [1] = $procmux$4146_Y [0]
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
    Consolidated identical input bits for $mux cell $procmux$3652:
      Old ports: A=$procmux$3650_Y, B={ 2'01 \mem_rdata_latched [9:7] }, Y=$procmux$3652_Y
      New ports: A=$procmux$3650_Y [3:0], B={ 1'1 \mem_rdata_latched [9:7] }, Y=$procmux$3652_Y [3:0]
      New connections: $procmux$3652_Y [4] = 1'0
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
    Consolidated identical input bits for $mux cell $procmux$3654:
      Old ports: A=$procmux$3652_Y, B={ 2'01 \mem_rdata_latched [9:7] }, Y=$procmux$3654_Y
      New ports: A=$procmux$3652_Y [3:0], B={ 1'1 \mem_rdata_latched [9:7] }, Y=$procmux$3654_Y [3:0]
      New connections: $procmux$3654_Y [4] = 1'0
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
    Consolidated identical input bits for $mux cell $procmux$1593:
      Old ports: A={ 32'00000000000000000000000000000000 \pcpi_rs2 }, B={ \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 [31] \pcpi_rs2 }, Y=$procmux$1593_Y
      New ports: A=1'0, B=\pcpi_rs2 [31], Y=$procmux$1593_Y [32]
      New connections: { $procmux$1593_Y [63:33] $procmux$1593_Y [31:0] } = { $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] $procmux$1593_Y [32] \pcpi_rs2 }
    Consolidated identical input bits for $mux cell $procmux$1602:
      Old ports: A={ 31'0000000000000000000000000000000 \pcpi_rs1 }, B={ \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 [31] \pcpi_rs1 }, Y=$auto$wreduce.cc:514:run$5369 [62:0]
      New ports: A=1'0, B=\pcpi_rs1 [31], Y=$auto$wreduce.cc:514:run$5369 [32]
      New connections: { $auto$wreduce.cc:514:run$5369 [62:33] $auto$wreduce.cc:514:run$5369 [31:0] } = { $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] $auto$wreduce.cc:514:run$5369 [32] \pcpi_rs1 }
    Consolidated identical input bits for $mux cell $ternary$src/picorv32.v:2291$754:
      Old ports: A=6'011110, B=6'111110, Y=$auto$wreduce.cc:514:run$5372 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:514:run$5372 [5]
      New connections: $auto$wreduce.cc:514:run$5372 [4:0] = 5'11110
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 27 changes.

5.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
<suppressed ~12 debug messages>
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 4 cells.

5.19.6. Executing OPT_SHARE pass.

5.19.7. Executing OPT_DFF pass (perform DFF optimizations).

5.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 0 unused cells and 105 unused wires.
<suppressed ~1 debug messages>

5.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~5 debug messages>
Optimizing module picorv32_pcpi_mul.
<suppressed ~3 debug messages>
Optimizing module soc.
Optimizing module wb_interconnect.

5.19.10. Rerunning OPT passes. (Maybe there is more to do..)

5.19.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~554 debug messages>

5.19.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
    Consolidated identical input bits for $mux cell $procmux$3147:
      Old ports: A=$add$src/picorv32.v:1560$1423_Y, B={ $add$src/picorv32.v:1569$1425_Y [31:1] $3\current_pc[31:0] [0] }, Y=$procmux$3147_Y
      New ports: A=$add$src/picorv32.v:1560$1423_Y [31:1], B=$add$src/picorv32.v:1569$1425_Y [31:1], Y=$procmux$3147_Y [31:1]
      New connections: $procmux$3147_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
    Consolidated identical input bits for $mux cell $procmux$3149:
      Old ports: A=$3\current_pc[31:0], B=$procmux$3147_Y, Y=$procmux$3149_Y
      New ports: A=$3\current_pc[31:0] [31:1], B=$procmux$3147_Y [31:1], Y=$procmux$3149_Y [31:1]
      New connections: $procmux$3149_Y [0] = $3\current_pc[31:0] [0]
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 2 changes.

5.19.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.19.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $procmux$3147 in front of them:
        $auto$alumacc.cc:495:replace_alu$5391
        $auto$alumacc.cc:495:replace_alu$5385

5.19.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\cpuregs[9]$5495 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[9]).
Adding EN signal on $memory\cpuregs[8]$5493 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[8]).
Adding EN signal on $memory\cpuregs[7]$5491 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[7]).
Adding EN signal on $memory\cpuregs[6]$5489 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[6]).
Adding EN signal on $memory\cpuregs[5]$5487 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[5]).
Adding EN signal on $memory\cpuregs[4]$5485 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[4]).
Adding EN signal on $memory\cpuregs[3]$5483 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[3]).
Adding EN signal on $memory\cpuregs[31]$5539 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[31]).
Adding EN signal on $memory\cpuregs[30]$5537 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[30]).
Adding EN signal on $memory\cpuregs[2]$5481 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[2]).
Adding EN signal on $memory\cpuregs[29]$5535 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[29]).
Adding EN signal on $memory\cpuregs[28]$5533 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[28]).
Adding EN signal on $memory\cpuregs[27]$5531 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[27]).
Adding EN signal on $memory\cpuregs[26]$5529 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[26]).
Adding EN signal on $memory\cpuregs[25]$5527 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[25]).
Adding EN signal on $memory\cpuregs[24]$5525 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[24]).
Adding EN signal on $memory\cpuregs[23]$5523 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[23]).
Adding EN signal on $memory\cpuregs[22]$5521 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[22]).
Adding EN signal on $memory\cpuregs[21]$5519 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[21]).
Adding EN signal on $memory\cpuregs[20]$5517 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[20]).
Adding EN signal on $memory\cpuregs[1]$5479 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[1]).
Adding EN signal on $memory\cpuregs[19]$5515 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[19]).
Adding EN signal on $memory\cpuregs[18]$5513 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[18]).
Adding EN signal on $memory\cpuregs[17]$5511 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[17]).
Adding EN signal on $memory\cpuregs[16]$5509 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[16]).
Adding EN signal on $memory\cpuregs[15]$5507 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[15]).
Adding EN signal on $memory\cpuregs[14]$5505 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[14]).
Adding EN signal on $memory\cpuregs[13]$5503 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[13]).
Adding EN signal on $memory\cpuregs[12]$5501 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[12]).
Adding EN signal on $memory\cpuregs[11]$5499 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[11]).
Adding EN signal on $memory\cpuregs[10]$5497 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[10]).
Adding EN signal on $memory\cpuregs[0]$5477 ($dff) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = \cpuregs_wrdata, Q = \cpuregs[0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5093 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$5093 ($dffe) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Adding SRST signal on $auto$ff.cc:266:slice$5465 ($dffe) from module picorv32_pcpi_mul (D = $auto$wreduce.cc:514:run$5371 [4:0], Q = \mul_counter [4:0], rval = 5'11110).

5.19.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 32 unused cells and 41 unused wires.
<suppressed ~34 debug messages>

5.19.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~1 debug messages>
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.19.18. Rerunning OPT passes. (Maybe there is more to do..)

5.19.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~426 debug messages>

5.19.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 0 changes.

5.19.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.19.22. Executing OPT_SHARE pass.

5.19.23. Executing OPT_DFF pass (perform DFF optimizations).

5.19.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.19.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.19.26. Rerunning OPT passes. (Maybe there is more to do..)

5.19.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \picorv32_pcpi_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \soc..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \wb_interconnect..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~426 debug messages>

5.19.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
  Optimizing cells in module \picorv32_pcpi_mul.
  Optimizing cells in module \soc.
  Optimizing cells in module \wb_interconnect.
Performed a total of 0 changes.

5.19.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.19.30. Executing OPT_SHARE pass.

5.19.31. Executing OPT_DFF pass (perform DFF optimizations).

5.19.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..

5.19.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.19.34. Finished fast OPT passes. (There is nothing left to do.)

5.20. Executing TECHMAP pass (map to technology primitives).

5.20.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Generating RTLIL representation for module `\$connect'.
Generating RTLIL representation for module `\$input_port'.
Successfully finished Verilog frontend.

5.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper maccmap for cells of type $macc_v2.
  add \rd [23:20] (4 bits, unsigned)
  add \this_rs2 [23:20] (4 bits, unsigned)
  add \rdx [20] (1 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
  add \rd [31:28] (4 bits, unsigned)
  add \this_rs2 [31:28] (4 bits, unsigned)
  add \rdx [28] (1 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
  add \rd [19:16] (4 bits, unsigned)
  add \this_rs2 [19:16] (4 bits, unsigned)
  add \rdx [16] (1 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
  add \rd [27:24] (4 bits, unsigned)
  add \this_rs2 [27:24] (4 bits, unsigned)
  add \rdx [24] (1 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
  add \rd [7:4] (4 bits, unsigned)
  add \this_rs2 [7:4] (4 bits, unsigned)
  add \rdx [4] (1 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$10ed987432f06055e5279101f9ec60a49861b43c\_90_alu for cells of type $alu.
  add \rd [11:8] (4 bits, unsigned)
  add \this_rs2 [11:8] (4 bits, unsigned)
  add \rdx [8] (1 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
  add \rd [3:0] (4 bits, unsigned)
  add \this_rs2 [3:0] (4 bits, unsigned)
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffce.
  add \rd [15:12] (4 bits, unsigned)
  add \this_rs2 [15:12] (4 bits, unsigned)
  add \rdx [12] (1 bits, unsigned)
  packed 1 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_90_alu for cells of type $alu.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_90_alu for cells of type $alu.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_90_alu for cells of type $alu.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$335cfd09f1afa8139c4aafcbbe5f361887b79c5e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$455891ae50d34e43581a517459d55825f76fa58e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using template $paramod$c96def1cdcef2eee3c62e5dfb7ba2dd09c9f74dd\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$d901baf1fb63991ac0a40d2e3f4807d372bb57a2\_90_alu for cells of type $alu.
Using template $paramod$59b03ae2620a41577de8da5f5c97b2919e82362b\_90_pmux for cells of type $pmux.
Using template $paramod$fedb90247e1daaa8b0af86a595f377181f141d27\_90_pmux for cells of type $pmux.
Using template $paramod$24fb226dd75c9d3f6955ec2ad61d794776778cf6\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$f3115659d5e2977ebd2cb01ff3557fc5f6187689\_90_pmux for cells of type $pmux.
Using template $paramod$ed0bb9616228df1e6c226f91f8133e751815f1b1\_90_pmux for cells of type $pmux.
Using template $paramod$c15e84c77f007506123baf6c4be45847f0e33a3b\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
No more expansions possible.
<suppressed ~6195 debug messages>

5.21. Executing OPT pass (performing simple optimizations).

5.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~2374 debug messages>
Optimizing module picorv32_pcpi_mul.
<suppressed ~243 debug messages>
Optimizing module soc.
Optimizing module wb_interconnect.

5.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
<suppressed ~3528 debug messages>
Finding identical cells in module `\picorv32_pcpi_mul'.
<suppressed ~9 debug messages>
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 1179 cells.

5.21.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$16094 ($_SDFFE_PN0P_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = 1'0, Q = \reg_next_pc [0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$24739 ($_SDFFE_PN0P_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.

5.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 394 unused cells and 3724 unused wires.
<suppressed ~397 debug messages>

5.21.5. Rerunning OPT passes. (Removed registers in this run.)

5.21.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~25 debug messages>
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.21.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.21.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$16491 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [31], Q = \decoded_imm [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16490 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [30], Q = \decoded_imm [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16489 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [29], Q = \decoded_imm [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16488 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [28], Q = \decoded_imm [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16487 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [27], Q = \decoded_imm [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16486 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [26], Q = \decoded_imm [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16485 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [25], Q = \decoded_imm [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16484 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [24], Q = \decoded_imm [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16483 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [23], Q = \decoded_imm [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16482 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [22], Q = \decoded_imm [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16481 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [21], Q = \decoded_imm [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16480 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [20], Q = \decoded_imm [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16479 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [19], Q = \decoded_imm [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16478 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [18], Q = \decoded_imm [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16477 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [17], Q = \decoded_imm [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16476 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [16], Q = \decoded_imm [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16475 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [15], Q = \decoded_imm [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16474 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [14], Q = \decoded_imm [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16473 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [13], Q = \decoded_imm [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16472 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [12], Q = \decoded_imm [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16471 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [11], Q = \decoded_imm [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16470 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [10], Q = \decoded_imm [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16469 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [9], Q = \decoded_imm [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16468 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [8], Q = \decoded_imm [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16467 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [7], Q = \decoded_imm [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16466 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [6], Q = \decoded_imm [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16465 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [5], Q = \decoded_imm [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16464 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [4], Q = \decoded_imm [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16463 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [3], Q = \decoded_imm [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16462 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [2], Q = \decoded_imm [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$16461 ($_DFFE_PP_) from module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 (D = $procmux$3588.Y_B [1], Q = \decoded_imm [1], rval = 1'0).

5.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 32 unused cells and 17 unused wires.
<suppressed ~33 debug messages>

5.21.10. Rerunning OPT passes. (Removed registers in this run.)

5.21.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
Optimizing module picorv32_pcpi_mul.
Optimizing module soc.
Optimizing module wb_interconnect.

5.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 0 cells.

5.21.13. Executing OPT_DFF pass (perform DFF optimizations).

5.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..

5.21.15. Finished fast OPT passes.

5.22. Executing ABC pass (technology mapping using ABC).

5.22.1. Extracting gate netlist of module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32' to `<abc-temp-dir>/input.blif'..
Replacing 33 occurrences of constant undef bits with constant zero bits

5.22.1.1. Executed ABC.
Extracted 7907 gates and 9541 wires to a netlist network with 1631 inputs and 675 outputs.
Running ABC script: <abc-temp-dir>/abc.script
ABC: UC Berkeley, ABC 1.01 (compiled Sep 19 2025 17:16:22)
ABC: abc 01> set abcout /dev/stdout
ABC: abc 01> empty
ABC: abc 01> source <abc-temp-dir>/abc.script
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library /tmp/yosys-abc-eylH2z/stdcells.genlib 
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 
ABC: abc 04> echo "ABC_DONE"

5.22.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      449
ABC RESULTS:            ANDNOT cells:     1410
ABC RESULTS:               MUX cells:     3219
ABC RESULTS:              NAND cells:      266
ABC RESULTS:               NOR cells:      370
ABC RESULTS:               NOT cells:      217
ABC RESULTS:                OR cells:     1215
ABC RESULTS:             ORNOT cells:      207
ABC RESULTS:              XNOR cells:      134
ABC RESULTS:               XOR cells:      337
ABC RESULTS:        internal signals:     7235
ABC RESULTS:           input signals:     1631
ABC RESULTS:          output signals:      675
Removing temp directory.

5.22.2. Extracting gate netlist of module `\picorv32_pcpi_mul' to `<abc-temp-dir>/input.blif'..

5.22.2.1. Executed ABC.
Extracted 662 gates and 967 wires to a netlist network with 304 inputs and 254 outputs.
Running ABC script: <abc-temp-dir>/abc.script
ABC: UC Berkeley, ABC 1.01 (compiled Sep 19 2025 17:16:22)
ABC: abc 01> set abcout /dev/stdout
ABC: abc 01> empty
ABC: abc 01> source <abc-temp-dir>/abc.script
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library /tmp/yosys-abc-eylH2z/stdcells.genlib 
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 
ABC: abc 04> echo "ABC_DONE"

5.22.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       64
ABC RESULTS:            ANDNOT cells:      107
ABC RESULTS:               MUX cells:      160
ABC RESULTS:              NAND cells:       59
ABC RESULTS:               NOR cells:       22
ABC RESULTS:               NOT cells:        6
ABC RESULTS:                OR cells:       62
ABC RESULTS:             ORNOT cells:       27
ABC RESULTS:              XNOR cells:       78
ABC RESULTS:               XOR cells:       55
ABC RESULTS:        internal signals:      409
ABC RESULTS:           input signals:      304
ABC RESULTS:          output signals:      254
Removing temp directory.

5.22.3. Extracting gate netlist of module `\soc' to `<abc-temp-dir>/input.blif'..

5.22.3.1. Executed ABC.
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.
Running ABC script: <abc-temp-dir>/abc.script
ABC: UC Berkeley, ABC 1.01 (compiled Sep 19 2025 17:16:22)
ABC: abc 01> set abcout /dev/stdout
ABC: abc 01> empty
ABC: abc 01> source <abc-temp-dir>/abc.script
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library /tmp/yosys-abc-eylH2z/stdcells.genlib 
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 
ABC: abc 04> echo "ABC_DONE"

5.22.3.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        2
Removing temp directory.

5.22.4. Extracting gate netlist of module `\wb_interconnect' to `<abc-temp-dir>/input.blif'..
Don't call ABC as there is nothing to map.

5.22.4.1. Executed ABC.
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Removing temp directory.
Removing global temp directory.

5.23. Executing OPT pass (performing simple optimizations).

5.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32.
<suppressed ~1305 debug messages>
Optimizing module picorv32_pcpi_mul.
<suppressed ~65 debug messages>
Optimizing module soc.
Optimizing module wb_interconnect.

5.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
<suppressed ~48 debug messages>
Finding identical cells in module `\picorv32_pcpi_mul'.
Finding identical cells in module `\soc'.
Finding identical cells in module `\wb_interconnect'.
Removed a total of 16 cells.

5.23.3. Executing OPT_DFF pass (perform DFF optimizations).

5.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32..
Finding unused cells or wires in module \picorv32_pcpi_mul..
Finding unused cells or wires in module \soc..
Finding unused cells or wires in module \wb_interconnect..
Removed 23 unused cells and 4866 unused wires.
<suppressed ~50 debug messages>

5.23.5. Finished fast OPT passes.

5.24. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `soc'. Setting top module to soc.

5.24.1. Analyzing design hierarchy..
Top module:  \soc
Used module:     $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32
Used module:         \picorv32_pcpi_mul
Used module:     \wb_interconnect

5.24.2. Analyzing design hierarchy..
Top module:  \soc
Used module:     $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32
Used module:         \picorv32_pcpi_mul
Used module:     \wb_interconnect
Removed 0 unused modules.

5.25. Printing statistics.

=== $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32 ===

        +----------Local Count, excluding submodules.
        | 
     7565 wires
    10122 wire bits
      184 public wires
     2292 public wire bits
       27 ports
      409 port bits
     9448 cells
     1405   $_ANDNOT_
      449   $_AND_
       11   $_DFFE_PN_
     1262   $_DFFE_PP_
      113   $_DFF_P_
     3215   $_MUX_
      265   $_NAND_
      367   $_NOR_
      195   $_NOT_
      205   $_ORNOT_
     1214   $_OR_
       31   $_SDFFCE_PN0P_
        9   $_SDFFCE_PP0P_
      157   $_SDFFE_PN0P_
        4   $_SDFFE_PN1N_
        2   $_SDFFE_PP0P_
        2   $_SDFFE_PP1N_
        1   $_SDFFE_PP1P_
       69   $_SDFF_PN0_
        1   $_SDFF_PP0_
      134   $_XNOR_
      337   $_XOR_
        1 submodules
        1   picorv32_pcpi_mul

=== picorv32_pcpi_mul ===

        +----------Local Count, excluding submodules.
        | 
      585 wires
     1339 wire bits
       31 public wires
      779 public wire bits
       10 ports
      134 port bits
      894 cells
      107   $_ANDNOT_
       64   $_AND_
      159   $_DFFE_PP_
        3   $_DFF_P_
      160   $_MUX_
       59   $_NAND_
       22   $_NOR_
        5   $_NOT_
       27   $_ORNOT_
       62   $_OR_
        2   $_SDFFCE_PN0P_
       81   $_SDFFCE_PP0P_
        4   $_SDFFCE_PP1P_
        4   $_SDFF_PN0_
        1   $_SDFF_PN1_
        1   $_SDFF_PP0_
       78   $_XNOR_
       55   $_XOR_

=== soc ===

        +----------Local Count, excluding submodules.
        | 
       24 wires
      216 wire bits
       21 public wires
      213 public wire bits
        6 ports
       68 port bits
        5 cells
        1   $_NOT_
        3   $_OR_
        1   sram
        2 submodules
        1   $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32
        1   wb_interconnect

=== wb_interconnect ===

        +----------Local Count, excluding submodules.
        | 
       22 wires
      214 wire bits
       22 public wires
      214 public wire bits
       22 ports
      214 port bits

=== design hierarchy ===

        +----------Count including submodules.
        | 
    10347 soc
     9448 $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32
      894   picorv32_pcpi_mul

        +----------Count including submodules.
        | 
     8196 wires
    11891 wire bits
      258 public wires
     3498 public wire bits
       65 ports
      825 port bits
        - memories
        - memory bits
        - processes
    10347 cells
     1512   $_ANDNOT_
      513   $_AND_
       11   $_DFFE_PN_
     1421   $_DFFE_PP_
      116   $_DFF_P_
     3375   $_MUX_
      324   $_NAND_
      389   $_NOR_
      201   $_NOT_
      232   $_ORNOT_
     1279   $_OR_
       33   $_SDFFCE_PN0P_
       90   $_SDFFCE_PP0P_
        4   $_SDFFCE_PP1P_
      157   $_SDFFE_PN0P_
        4   $_SDFFE_PN1N_
        2   $_SDFFE_PP0P_
        2   $_SDFFE_PP1N_
        1   $_SDFFE_PP1P_
       73   $_SDFF_PN0_
        1   $_SDFF_PN1_
        2   $_SDFF_PP0_
      212   $_XNOR_
      392   $_XOR_
        1   sram
        2 submodules
        1   $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32
        1   wb_interconnect

5.26. Executing CHECK pass (checking for obvious problems).
Checking module $paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32...
Checking module picorv32_pcpi_mul...
Checking module soc...
Checking module wb_interconnect...
Found and reported 0 problems.

6. Executing Verilog backend.

6.1. Executing BMUXMAP pass.

6.2. Executing DEMUXMAP pass.
Dumping module `$paramod$09ab95e66a4a3f5caae4300202fbcd57290941be\picorv32'.
Dumping module `\picorv32_pcpi_mul'.
Dumping module `\soc'.
Dumping module `\wb_interconnect'.

7. Generating Graphviz representation of design.
Writing dot description to `/home/ank/.yosys_show.dot'.
Dumping module soc to page 1.
Exec: { test -f '/home/ank/.yosys_show.dot.pid' && fuser -s '/home/ank/.yosys_show.dot.pid' 2> /dev/null; } || ( echo $$ >&3; exec xdot '/home/ank/.yosys_show.dot'; ) 3> '/home/ank/.yosys_show.dot.pid' &

End of script. Logfile hash: 048de19e77, CPU: user 2.56s system 0.06s, MEM: 68.46 MB peak
Yosys 0.57+148 (git sha1 259bd6fb3, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3)
Time spent: 20% 44x opt_expr (0 sec), 20% 31x opt_clean (0 sec), ...
